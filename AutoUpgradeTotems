--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.1) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v10=getfenv or function()return _ENV;end;v11=setmetatable;v12=pcall;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v20,v21,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==5) then v36=v33;v37=nil;v37=function(...)return {...},v13("#",...);end;v27=6;end if (v27==2) then v31=function()local v48=0;local v49;while true do if (v48==(0 -0)) then v49=v2(v20,v28,v28);v28=v28 + (452 -(342 + 109));v48=(2032 -1123) -(864 + 44);end if ((1 + (1075 -(414 + 661)))==v48) then return v49;end end end;v32=nil;v32=function()local v50,v51=v2(v20,v28,v28 + (2 -0));v28=v28 + 2 + 0;return (v51 * 256) + v50;end;v27=3;end if (v27==7) then v39=function(v40,v41,v42)local v52=v40[1];local v53=v40[2];local v54=v40[3];return function(...)local v78=1;local v79= -1;local v80={...};local v81=v13("#",...) -1;local function v82()local v83=v52;local v84=v53;local v85=v54;local v86=v37;local v87={};local v88={};local v89={};for v97=0,v81 do if ((v97>=v85) or (((2990 -(153 + 22)) + 756)>=(693 + 3104))) then v87[v97-v85]=v80[v97 + 1 + 0];else v89[v97]=v80[v97 + (2 -1)];end end local v90=(v81-v85) + 1;local v91;local v92;while true do local v98=0 -0;local v99;local v100;while true do if ((((49 + 109) -(130 + 27))==v98) or ((952 + 1534)>(8228 -3651))) then while true do if ((v99==(0 -0)) or (2076==723)) then v100=(0 -0) -0;while true do if ((90==(1210 -(342 + 778))) and (v100==1)) then if (((3698 -(354 + 191))==3153) and (v92<=(1101 -((2252 -1363) + 184)))) then if ((v92<=13) or ((5084 -(452 + 731))<=1073)) then if ((1217<(3766 -(197 + 511))) and (v92<=6)) then if ((v92<=(4 -2)) or ((4273 -3161)==(705 + 56))) then if ((v92<=0) or (4015<=(4535 -(1322 + 345)))) then local v142=0 + 0 + 0;local v143;local v144;local v145;local v146;local v147;while true do if (((1710 + 1577)<(12479 -8522)) and (v142==2)) then v147=nil;while true do if (((5175 -(39 + 562))>=((1105 -581) + 736)) and (v143==(5 -(3 + 0)))) then for v328=v144,v79 do local v329=0;local v330;while true do if ((v329==(0 + (386 -(177 + 209)))) or ((1007 + 342)>=(5413 -3802))) then v330=0 + 0;while true do if (((4671 -2574)>(1220 -657)) and (v330==(379 -(233 + 146)))) then v147=v147 + (211 -(159 + 51));v89[v328]=v145[v147];break;end end break;end end end break;end if ((v143==(331 -((680 -(472 + 158)) + 280))) or ((1603 + 1553)>(2691 + 1290))) then v79=(v146 + v144) -(1484 -(513 + 970));v147=0 + 0;v143=2;end if (((1637 + 196)>=1777) and (v143==(0 + 0))) then local v322=0 -0;while true do if (((3786 + 46 + 9)>=967) and (v322==(1 + 0))) then v143=1 -0;break;end if ((v322==(0 + 0)) or (((2907 + 2567) -(804 + 596))<(1580 -1077))) then v144=v91[1993 -(1687 + 304)];v145,v146=v86(v89[v144](v14(v89,v144 + 1 + 0,v79)));v322=1;end end end end break;end if (((2708 -(574 + 939))==(2589 -(312 + 1082))) and (v142==(1277 -(479 + 798)))) then v143=287 -((733 -(471 + 126)) + 151);v144=nil;v142=1;end if ((3957>=(3370 -(455 + 414))) and (v142==(300 -(274 + 25)))) then v145=nil;v146=nil;v142=1 + 1;end end elseif (((416 -(127 + 213))<(16618 -12375)) and (v92>1)) then local v164=0 -0;local v165;local v166;local v167;local v168;local v169;local v170;while true do if ((v164==(1 -0)) or (425==4051)) then v167=nil;v168=nil;v164=2 -0;end if (((5423 -3990)<=1447) and (v164==(499 -(256 + 240)))) then while true do if (((629 + 1483)>(64 + 564)) and (v165==(0 -0))) then local v333=0 + (0 -0);local v334;while true do if ((v333==(0 -0)) or ((4105 -2313)<=(3531 -(448 + (3724 -2275))))) then v334=(0 + 0) -0;while true do if ((v334==(0 + 0)) or (((1806 -862) + 2707)<=1776)) then local v440=0;while true do if ((v440==((1577 -(48 + 53)) -(989 + 486))) or ((527 + 95)>=(4130 + 120))) then v334=1;break;end if (((0 + (0 -0))==v440) or ((5136 -2950)<(1843 -(196 + 1059)))) then v166=v91[2];v167=v91[1 + 3];v440=1;end end end if (((6006 -4095)<=((3424 -1390) + 400)) and (v334==((2012 -(1037 + 304)) -(622 + 48)))) then v165=1;break;end end break;end end end if ((v165==(1 + 2)) or ((512 + 1106)>=(11050 -6164))) then if (v170 or (2392>=(7228 -4334))) then local v379=0 -0;while true do if (((315 -(287 + (279 -(239 + 12))))==v379) or (((1119 + 5873) -2757)==((5368 -(1595 + 158)) + 1277))) then v89[v168]=v170;v78=v91[6 -3];break;end end else v78=v78 + (2 -1);end break;end if ((v165==(731 -(122 + 608))) or ((314 + 240)>=2045)) then local v335=173 -(103 + 70);while true do if ((v335==1) or (1496>(4369 -(95 + 1 + 190)))) then v165=2;break;end if (((233 -137)<=(5446 -(132 + (1762 -904)))) and (v335==(0 + 0))) then local v383=0 + 0;while true do if ((v383==(0 -0)) or ((6568 -(1812 + 166))<=(2361 + 1415))) then v168=v166 + 1 + 1;v169={v89[v166](v89[v166 + (3 -2)],v89[v168])};v383=777 -(681 + 95);end if ((v383==(4 -3)) or ((5823 -(995 + 472))==4937)) then v335=1122 -(1003 + (424 -306));break;end end end end end if ((v165==(1709 -(464 + 1243))) or (((1680 -(183 + 589)) -(81 + 128))<=(96 -(1976 -(1116 + 830))))) then local v336=0;local v337;while true do if (((2259 -(1573 + (1545 -1197)))<=3637) and (v336==((1498 -(1129 + 349)) -(15 + 5)))) then v337=0 -0;while true do if (((5026 -(198 + 369))>=(2587 -(75 + 940))) and (v337==(1 + (0 -0)))) then v165=740 -(480 + 257);break;end if ((v337==((0 -0) -0)) or ((366 + 515)==(2491 -737))) then local v441=485 -(75 + 410);while true do if ((0==v441) or ((1317 + 2019)==(3154 -2481))) then for v463=2 -1,v167 do v89[v168 + v463]=v169[v463];end v170=v169[1 -0];v441=(2 + 1) -2;end if (((2995 -(448 + 39))<(4967 -(4 + 80))) and (v441==(2 -1))) then v337=1;break;end end end end break;end end end end break;end if ((v164==(1 + 1)) or ((3021 + 449)==(4590 -1864))) then v169=nil;v170=nil;v164=3 + 0;end if ((v164==(0 + 0)) or ((3823 -1957)>(5301 -3166))) then local v314=0 + 0;while true do if (((4073 -(778 + 257))==(2641 + 397)) and (v314==((464 -(210 + 254)) -0))) then v165=(1443 -(1142 + 301)) + 0;v166=nil;v314=1306 -(453 + 852);end if ((v314==(2 -1)) or ((2364 -1272)==(12541 -9377))) then v164=1 + 0;break;end end end end else local v171=0 + 0;local v172;local v173;local v174;local v175;while true do if (((1665 -(307 + 1357))==v171) or ((11383 -8785)<=(170 -62))) then v174=nil;v175=nil;v171=55 -(19 + 34);end if (((321 + 948)<=(3100 -(862 + (3669 -2842)))) and (v171==(0 + 0))) then v172=0 + 0;v173=nil;v171=1 + 0;end if ((4482>1608) and ((1336 -(1255 + 79))==v171)) then while true do if ((v172==(0 -0)) or ((4520 -2361)==(17 + 62))) then local v338=0 + 0;while true do if (((2683 -(385 + 834))<=((7921 -5724) + 1831)) and (v338==(1 + 0))) then v172=3 -2;break;end if ((v338==(0 + 0)) or ((5656 -3649)<(2141 -1004))) then v173=v91[2];v174=v89[v173];v338=1;end end end if ((((10244 -3822) -(324 + 1397))>=(9610 -5050)) and (v172==(232 -(210 + 21)))) then v175=v89[v173 + (1027 -(18 + 1007))];if (((4885 -(59 + 37 + 17))<=(11983 -7135)) and (v175>(1380 -(517 + 814 + 49)))) then if ((((1880 -1239) -227)<=908) and (v174>v89[v173 + 1])) then v78=v91[496 -(344 + 149)];else v89[v173 + (7 -4)]=v174;end elseif ((v174<v89[v173 + 1]) or ((2738 -(353 + 866))>=(4934 -3170))) then v78=v91[3];else v89[v173 + 3]=v174;end break;end end break;end end end elseif ((v92<=(11 -7)) or ((3574 + 550)==(449 + 1870))) then if ((v92>(5 -2)) or ((154 + 3164)<2304)) then v89[v91[7 -5]][v91[1 + 2]]=v91[78 -(26 + 48)];else v89[v91[397 -(193 + (352 -150))]]=v89[v91[515 -(11 + 501)]]%v91[813 -(197 + 612)];end elseif ((v92>5) or ((77 + 239 + 768)>(3392 -2217))) then local v179=862 -((2059 -(730 + 579)) + 112);local v180;local v181;local v182;while true do if (((2505 -(725 + 142))<((18619 -7138) -6548)) and (v179==0)) then v180=0;v181=nil;v179=1 + 0;end if ((v179==((1976 -(953 + 866)) -(94 + 62))) or (4812==(9808 -6409))) then v182=nil;while true do if ((v180==(0 -0)) or ((623 + (2343 -1200))<13)) then v181=0 -(0 + 0);v182=nil;v180=1680 -(75 + 1012 + 592);end if ((v180==(1613 -(669 + 943))) or (3958<=(2243 -(601 + 789)))) then while true do if ((v181==(0 + 0)) or (((2576 -(79 + 612)) -(844 + 276))==(1373 + 2123))) then v182=v91[8 -6];v89[v182](v89[v182 + ((61 + 62) -(29 + 93))]);break;end end break;end end break;end end else v41[v91[198 -(146 + 49)]]=v89[v91[2 + 0]];end elseif ((v92<=(749 -(63 + 677))) or ((1116 + 3699)<(5378 -2343))) then if ((v92<=(18 -11)) or ((8856 -5462)==4716)) then local v148=0 -0;local v149;local v150;local v151;while true do if (((26 + 319)<((6743 -(28 + 1)) -4078)) and (v148==((1 + 1) -1))) then v151=v91[3];for v297=3 -2,v151 do v150[v297]=v89[v149 + v297];end break;end if (((215 + 64)<=1822) and (v148==(45 -(21 + 24)))) then local v291=0 -0;while true do if ((((0 + 0) -0)==v291) or ((1522 + 2882)<2338)) then v149=v91[5 -3];v150=v89[v149];v291=1 + 0;end if ((v291==(3 -2)) or ((311 + 1170)>(4314 -(693 + 404)))) then v148=1 + 0;break;end end end end elseif (((3273 + 52)>=(1713 + 807)) and (v92>8)) then v89[v91[2 + 0]]={};else local v186=0 + 0;local v187;local v188;local v189;while true do if (((3233 -(227 + 1120))>139) and (v186==(0 -0))) then v187=0;v188=nil;v186=1589 -(1353 + 235);end if (((9224 -6653)<=(1412 + 1881)) and (v186==(1 + 0))) then v189=nil;while true do if ((v187==1) or (2472>=(1472 + 2659 + 63))) then while true do if ((v188==(1736 -(1652 + 84))) or ((8621 -5235)>(3103 + 1503))) then v189=v91[3 -1];v89[v189]=v89[v189](v14(v89,v189 + ((1961 -(746 + 741)) -(61 + 206 + 206)),v91[4 -1]));break;end end break;end if ((1867>(2629 -(130 + 1543))) and (((684 -(571 + 113)) -0)==v187)) then v188=0;v189=nil;v187=1;end end break;end end end elseif (((4537 -2836)<=(7379 -3335)) and (v92<=11)) then if ((v92>10) or ((3137 + 530)<=((5282 -2968) -988))) then v89[v91[1903 -(168 + 1733)]]=v89[v91[902 -(491 + 408)]] -v91[4 + 0];else v78=v91[814 -(478 + 333)];end elseif ((v92==12) or ((8 + 600)>=(3864 + 1122))) then v89[v91[641 -(130 + 509)]]=v42[v91[3]];else do return v89[v91[2 + 0]];end end elseif (((4641 -(1427 + 316))==(4456 -(621 + 937))) and (v92<=20)) then if (((566 + 2234)>=742) and (v92<=(1480 -(972 + 492)))) then if (((7426 -(3153 + 212))>3791) and (v92<=((15 + 10) -(573 -(493 + 69))))) then local v152=0 + 0;local v153;local v154;local v155;local v156;while true do if (((268 -(250 + 16))==v152) or (1041>=(3568 -(1838 + 156)))) then while true do if (((3726 -2951)<=(662 + 2840)) and (v153==(3 -2))) then v156=nil;while true do if ((4153>=(3232 -(239 + 37))) and (v154==(0 -0))) then local v362=0 -0;while true do if (((3841 -(1265 + 36))<(14479 -10509)) and ((0 -0)==v362)) then v155=v91[3 -1];v156=v89[v155];v362=1 + 0;end if (((1846 -((692 -(276 + 72)) + 538))<2526) and ((1 + 0)==v362)) then v154=1 -(1749 -(906 + 843));break;end end end if (((2 -1)==v154) or ((5183 -(229 + 159))<=(228 + 2566))) then for v380=v155 + (529 -(238 + 290)),v91[2 + 1] do v8(v156,v89[v380]);end break;end end break;end if ((v153==(1660 -(995 + 665))) or (1873==77)) then v154=0 -0;v155=nil;v153=1;end end break;end if ((1==v152) or (1272>=4695)) then v155=nil;v156=nil;v152=6 -4;end if ((v152==(1785 -(138 + 1647))) or ((9002 -5708)==(1503 -789))) then v153=0;v154=nil;v152=1 + (1278 -(328 + 950));end end elseif ((v92==(137 -(24 + 98))) or ((285 + 233)>1068)) then v89[v91[2 + 0]]=v91[3 + 0] + v89[v91[4]];elseif ((v89[v91[2]]~=v89[v91[11 -7]]) or (((3072 -(1226 + 22)) -1159)>(1407 + 783))) then v78=v78 + (3 -2);else v78=v91[(547 -(429 + 111)) -4];end elseif ((v92<=(1029 -((1406 -(200 + 305)) + 110))) or ((4753 -2608)>=2270)) then if (((1178 + 1407)<=3790) and (v92>(6 + 11))) then for v292=v91[2],v91[6 -3] do v89[v292]=nil;end else local v195=0 + 0;local v196;while true do if (((4457 -1243)>(975 + 258)) and (v195==(836 -(44 + 792)))) then v196=v91[(57 -(28 + 27)) + 0];do return v89[v196](v14(v89,v196 + 1 + 0,v91[915 -(551 + 361)]));end break;end end end elseif (((3749 + 735)>=(2056 -(21 + 22))) and (v92==(769 -(247 + 503)))) then do return;end else local v197=393 -(342 + (937 -(676 + 210)));local v198;local v199;local v200;while true do if ((v197==(4 -3)) or ((5232 -(581 + 614))<=(2814 -(18 + 36)))) then v200=nil;while true do if ((0==v198) or ((14876 -10979)<2474)) then local v340=1807 -(1317 + 490);while true do if (((7351 -4191)==(4006 -(268 + 578))) and (v340==0)) then v199=1866 -(532 + 1334);v200=nil;v340=1 + 0;end if ((v340==(1 + (0 -0))) or ((3010 -1913)<304)) then v198=678 -(75 + 602);break;end end end if ((v198==(1502 -(1132 + 369))) or (((1704 + 2342) -(1081 + 742))>3746)) then while true do if (((3994 + (116 -74))>=(2728 -(87 + 707))) and (v199==(0 -0))) then v200=v91[1 + 1];v89[v200]=v89[v200]();break;end end break;end end break;end if (((14141 -10106)>=1548) and (v197==0)) then v198=0;v199=nil;v197=2 -1;end end end elseif ((v92<=(724 -(123 + 577))) or (3358>=(13224 -9100))) then if (((1106 -631)==475) and (v92<=(61 -39))) then if ((1451==(2880 -(452 + 902 + 75))) and (v92>(62 -41))) then v89[v91[176 -(134 + 40)]][v91[1154 -(728 + 423)]]=v89[v91[2 + 2]];elseif ((v89[v91[6 -4]]<v89[v91[4]]) or ((4012 -(1556 + 30))<1215)) then v78=v78 + (1575 -(65 + 1509));else v78=v91[(2639 -692) -(508 + 1436)];end elseif ((4881>(416 -196)) and (v92==23)) then local v203=1167 -(1001 + 166);local v204;local v205;local v206;local v207;local v208;while true do if ((v203==(742 -(143 + 598))) or ((15932 -11445)<(3561 + 280))) then v206=nil;v207=nil;v203=1243 -(881 + 360);end if (((3674 + (883 -(93 + 12)))>4137) and (v203==2)) then v208=nil;while true do if ((v204==2) or ((1210 -644)>=(5100 -1651))) then for v363=v205,v79 do local v364=0 -(0 + 0);local v365;while true do if ((v364==(0 -0)) or ((2545 -(134 + 50))==(3604 -2537))) then v365=444 -(294 + 150);while true do if ((v365==(0 + 0)) or ((515 + 573)>=2507)) then v208=v208 + 1 + 0;v89[v363]=v206[v208];break;end end break;end end end break;end if ((v204==(0 + 0)) or ((3809 -((1464 -(66 + 1366)) + 209))==(839 + 354 + 31))) then v205=v91[(2340 -(1574 + 353)) -(46 + 78 + 287)];v206,v207=v86(v89[v205](v89[v205 + 1]));v204=3 -2;end if ((4439==4439) and ((1387 -(1277 + 109))==v204)) then v79=(v207 + v205) -1;v208=767 -(529 + 238);v204=2 + 0;end end break;end if ((0==v203) or ((281 -(17 + 192))>(4258 -(118 + 517)))) then v204=(0 + 0) -0;v205=nil;v203=1;end end else local v209=0;local v210;local v211;local v212;local v213;while true do if (((3350 -(1010 + 225))<=(788 + 2292)) and (v209==2)) then while true do if (((3258 -(112 + 96))>=((1005 -(40 + 552)) + 699)) and (2==v210)) then if ((v212>(0 + 0)) or ((1077 + 319)>=(2224 -(255 + 535)))) then if ((v213<=v89[v211 + (793 -(291 + 501))]) or ((2922 -1730)<=624)) then local v408=0 -(0 + 0);local v409;while true do if ((v408==(861 -(503 + (817 -459)))) or ((6604 -2965)<994)) then v409=0 -0;while true do if (((213 + 1867)>(2456 -((1948 -1409) + 206))) and (v409==(1868 -(564 + 1304)))) then v78=v91[645 -(193 + 449)];v89[v211 + (5 -2)]=v213;break;end end break;end end end elseif (((228 + 202)<1128) and (v213>=v89[v211 + (1269 -(525 + 743))])) then local v410=0 + 0;while true do if ((2070<(3660 + 1032)) and (v410==0)) then v78=v91[2 + 1];v89[v211 + 1 + 2]=v213;break;end end end break;end if ((v210==(3 -2)) or (((2823 + 2413) -(222 + 285))<=(8110 -4928))) then local v342=0 -0;while true do if ((3006==(2955 + 51)) and (v342==(391 -(374 + 17)))) then v213=v89[v211] + v212;v89[v211]=v213;v342=1;end if (((2356 -(2374 -1397))<(3407 -(511 + 1468))) and ((811 -(802 + 8))==v342)) then v210=79 -(54 + 23);break;end end end if ((v210==(0 + 0)) or ((2304 -(2042 -(175 + 1300)))==(2140 -(79 + 88)))) then v211=v91[537 -(192 + 343)];v212=v89[v211 + (594 -(532 + 60))];v210=1 + 0;end end break;end if (((624 + 417)<(2507 + 2245)) and (v209==(2 -1))) then v212=nil;v213=nil;v209=2 -0;end if ((((5600 -3640) + 2108)==(4329 -(147 + 6 + 108))) and (v209==(1013 -(553 + 460)))) then v210=0 -0;v211=nil;v209=1;end end end elseif (((19997 -15553)>(10116 -5791)) and (v92<=(52 -26))) then if ((v92>25) or (2727>=2798)) then v89[v91[(1441 -(479 + 310)) -((944 -(223 + 559)) + 488)]]=v89[v91[1 + 2]]%v89[v91[332 -(268 + 51 + 9)]];else local v215=0;local v216;local v217;local v218;local v219;while true do if (((5504 -(554 + 66))>=(78 + 266)) and (v215==(1170 -(1087 + 81)))) then while true do if ((v216==(698 -(664 + 33))) or ((3761 -1334)<(840 + 77))) then local v345=0 + 0;while true do if ((v345==(1848 -(1527 + 320))) or ((8148 -5547)>(2814 + 1552))) then v216=656 -(396 + 258);break;end if ((v345==(0 -0)) or (2235>=(1300 + 2063))) then v219={};v218=v11({},{__index=function(v392,v393)local v411=1987 -(1149 + (1471 -633));local v412;local v413;while true do if (((3417 -1827)==1590) and (v411==(0 + 0))) then v412=(339 -(194 + 145)) + (0 -0);v413=nil;v411=1;end if ((v411==(1 -0)) or ((1414 + 46)<=1400)) then while true do if (((9371 -6964)<(4436 -1887)) and (v412==(0 -0))) then local v468=0 -0;while true do if (((789 -(20 + 5))<(4137 -((1161 -(250 + 488)) + 839))) and (v468==0)) then local v473=0;while true do if ((v473==(0 + 0)) or ((1657 -(50 + 19))>(11625 -(3030 + 4459)))) then v413=v219[v393];return v413[1 -0][v413[1505 -(342 + 1161)]];end end end end end end break;end end end,__newindex=function(v392,v393,v394)local v414=0;local v415;local v416;while true do if (((0 + 0)==v414) or ((3232 -(20 + 54 + 111))<=(369 + 460))) then local v450=304 -(50 + 119 + 135);while true do if ((v450==0) or (1733==920)) then v415=0 + 0;v416=nil;v450=(2 -1) -0;end if ((v450==(1 + 0)) or ((3345 -(124 + 829))>=(3095 + 16))) then v414=1 + 0;break;end end end if (((8779 -4518)>(708 + 582)) and (v414==(1 + 0))) then while true do if ((v415==(817 -(572 + 235 + 10))) or ((674 -399)>(617 + 39))) then v416=v219[v393];v416[1][v416[62 -(25 + 35)]]=v394;break;end end break;end end end});v345=1 -0;end end end if ((v216==((2 + 0) -0)) or ((3395 -2418)>2306)) then for v366=4 -3,v91[2 + 0 + 2] do local v367=0 -0;local v368;while true do if (((6934 -2388)>(14464 -11350)) and (v367==(925 -(455 + 469)))) then if ((v368[1 + (0 -0)]==(168 -125)) or ((283 -((494 -272) + 36))>(9726 -7198))) then v219[v366-(1 + 0)]={v89,v368[27 -(16 + 8)]};else v219[v366-1]={v41,v368[(253 + 199) -(423 + 26)]};end v88[ #v88 + 1]=v219;break;end if ((4594<(654 + 4146)) and (v367==(513 -(95 + 418)))) then v78=v78 + 1;v368=v83[v78];v367=(1842 -(1814 + 27)) + 0;end end end v89[v91[2]]=v39(v217,v218,v42);break;end if (((5744 -1594)>(446 -(214 + 81))) and (v216==(1775 -(780 + 995)))) then v217=v84[v91[3]];v218=nil;v216=1 + 0;end end break;end if ((((4655 -(720 + 182)) -(114 + 32 + 103))==3504) and (v215==(0 -0))) then v216=0 -0;v217=nil;v215=3 -2;end if ((v215==1) or (4535<=(1359 -809))) then v218=nil;v219=nil;v215=5 -3;end end end elseif (((1413 + 1890)>=(3680 -(1487 + 323))) and (v92==(76 -49))) then local v220=1923 -((1603 -(619 + 34)) + 973);local v221;local v222;local v223;while true do if (((1789 + 2848)==(5166 -(410 + 119))) and (v220==(1 -0))) then v223=nil;while true do if ((3553<(10179 -5969)) and ((0 + 0)==v221)) then local v348=0 -0;while true do if ((v348==1) or ((9546 -7413)>(11102 -8217))) then v221=1 + 0;break;end if ((0==v348) or (1582>(3717 -1289))) then v222=1768 -(1730 + 38);v223=nil;v348=1412 -(669 + 742);end end end if (((21597 -17032)<=(1968 + 2705)) and (v221==(1201 -(393 + 807)))) then while true do if ((((2506 + 3281) -2248)<4910) and (v222==(0 + 0))) then v223=v91[2];v89[v223]=v89[v223](v89[v223 + (1 -0)]);break;end end break;end end break;end if ((v220==(0 + 0)) or ((50 + 310)>(266 + 808))) then v221=231 -(129 + 102);v222=nil;v220=1 + 0;end end else local v224=308 -(34 + 274);local v225;local v226;local v227;local v228;while true do if ((v224==(5 -3)) or ((2154 -(662 + 566))>=(10081 -5442))) then while true do if ((v225==(0 + 0)) or (((4435 -1126) -(1661 + 299))>4106)) then v226=0 + 0;v227=nil;v225=1 + 0;end if (((2365 + 76)>(2786 -(179 + 1060))) and (v225==(416 -(69 + 346)))) then v228=nil;while true do if (((4552 + 375)>(752 + 179 + 1548)) and (v226==1)) then for v419=v227 + ((1370 -890) -(161 + 318)),v79 do v8(v228,v89[v419]);end break;end if ((((221 + 3981) -1762)==(1159 + 1281)) and (v226==(1894 -(192 + 781 + (2746 -(1195 + 630)))))) then local v397=0 + 0;while true do if ((v397==0) or ((12801 -(4352 + 4856))==(987 + 1050))) then local v444=797 -(395 + 402);while true do if ((v444==(0 + 0 + 0)) or (((1586 + 912) -(41 + 285))<=2051)) then v227=v91[4 -2];v228=v89[v227];v444=1;end if (((2939 -2007)<=((26400 -17981) -(18697 -13727))) and (v444==1)) then v397=1 + 0;break;end end end if ((v397==(776 -(140 + 635))) or ((3590 -(131 + 1629))>(7036 -2346))) then v226=775 -(496 + 278);break;end end end end break;end end break;end if ((v224==(0 -0)) or ((2939 -(104 + 432))>4583)) then v225=0 + 0;v226=nil;v224=939 -(199 + 739);end if ((v224==(1176 -(596 + 579))) or ((3454 -(733 + 608))<=(18 + 14))) then v227=nil;v228=nil;v224=(105 -(82 + 21)) + 0;end end end elseif ((v92<=(13 + (59 -30))) or ((481 -(1759 -(1271 + 134)))>=434)) then if ((v92<=(124 -89)) or ((4616 -(149 + 156))>=(218 + 4458))) then if (((8244 -5022)>=212) and (v92<=(51 -20))) then if ((1548<(3372 -(14 + 96))) and (v92<=29)) then local v157=41 -(39 + 2);local v158;local v159;while true do if (((8066 -4974)==(7250 -4158)) and (v157==(0 + 0 + 0))) then v158=v91[1 + 2];v159=v89[v158];v157=50 -(16 + 33);end if (((1 -0)==v157) or ((1881 -((2442 -1840) + 1 + 81))==518)) then for v302=v158 + (3 -2),v91[10 -6] do v159=v159   .. v89[v302];end v89[v91[6 -4]]=v159;break;end end elseif ((((375 -121) + 614)<(711 + 2974)) and (v92==(114 -84))) then local v229=73 -(35 + 38);local v230;local v231;while true do if (((5158 -3448)<=(2163 + 561)) and (v229==(0 + 0))) then v230=0;v231=nil;v229=(1 + 1) -1;end if (((2542 -(1282 + 640))<(5918 -1903)) and (v229==(358 -(326 + 31)))) then while true do if (((769 + 467)==1236) and ((0 -0)==v230)) then v231=v89[v91[1811 -(563 + 561 + 683)]];if ((((1495 + 3891) -1478)>=875) and  not v231) then v78=v78 + (1 -(0 -0));else local v381=1863 -(60 + 1803);local v382;while true do if ((v381==(0 + 0)) or ((2481 -(183 + 1703))>2073)) then v382=0 -0;while true do if ((4833>=(7695 -5290)) and ((0 -0)==v382)) then v89[v91[933 -(694 + 237)]]=v231;v78=v91[7 -4];break;end end break;end end end break;end end break;end end else local v232=0 -0;local v233;local v234;local v235;while true do if ((4765>=(5185 -(950 + 13))) and (v232==0)) then v233=0 -0;v234=nil;v232=1;end if ((v232==1) or ((5314 -(91 + 1282))==(2303 -(252 + 1 + 8)))) then v235=nil;while true do if ((((1 -0) + 0)==v233) or ((5943 -(901 + 974))<=2491)) then while true do if ((v234==0) or ((9097 -6130)<=(424 + 826))) then v235=v91[895 -((98 -47) + (1724 -(49 + 833)))];v89[v235](v14(v89,v235 + 1 + 0,v91[2 + 1]));break;end end break;end if ((v233==(0 + 0)) or ((5113 -(305 + 1359))>(3980 + 349))) then v234=0 + 0;v235=nil;v233=1 + 0;end end break;end end end elseif ((v92<=(875 -(211 + 631))) or (982>=(3924 -(1316 + 507)))) then if ((v92>(13 + 19)) or ((4764 -2085)<(5047 -2925))) then if (((2715 -1229)<(4903 -(442 + 379))) and (v89[v91[2]]<=v89[v91[1939 -(231 + 1704)]])) then v78=v78 + (1897 -(864 + (4106 -3074)));else v78=v91[5 -2];end elseif ((((910 -575) + 4255)>(11706 -7549)) and (v89[v91[2]]==v91[11 -7])) then v78=v78 + 1 + 0;else v78=v91[1 + 2];end elseif (((20014 -15170)>((348 -118) + 401)) and (v92>(26 + 8))) then v89[v91[1031 -(835 + 194)]]=v91[1 + 2]~=0;else v89[v91[972 -(764 + 206)]]=v89[v91[3]][v91[1925 -(1014 + (2284 -1377))]];end elseif ((v92<=(2 + 36)) or ((1158 + 935)>=(2144 -(13 + 31)))) then if ((4168<(5281 -((985 -(386 + 572)) + 669))) and (v92<=(1522 -(830 + (1382 -(710 + 16)))))) then v89[v91[(5 -3) + 0]]=v39(v84[v91[3]],nil,v42);elseif ((v92==(459 -(172 + 250))) or ((958 + (2569 -(1098 + 210)))<=1961)) then local v239=0 + 0 + 0;local v240;local v241;local v242;local v243;while true do if (((5898 -(89 + 1187))>=(3357 -(805 + (209 -132)))) and (v239==1)) then local v316=672 -(141 + 404 + 127);while true do if ((v316==0) or ((6117 -3959)>(5350 -(40 + 710)))) then v79=(v242 + v240) -1;v243=0;v316=1863 -(139 + 1723);end if ((v316==((581 + 321) -(214 + 687))) or (4034<=(3000 -(888 + (3007 -(1634 + 342)))))) then v239=1 + 1;break;end end end if ((v239==(2 -0)) or (1512>=(5861 -2263))) then for v325=v240,v79 do local v326=812 -(601 + 211);local v327;while true do if ((v326==(769 -(704 + 65))) or (((2331 -(10 + 105)) + 1181)>(3048 + 978))) then v327=1889 -(1003 + 886);while true do if ((v327==(0 -0)) or ((4798 -2044)==(5852 -(639 + 154 + 73)))) then v243=v243 + (2 -1);v89[v325]=v241[v243];break;end end break;end end end break;end if ((((914 + 1185) -(854 + 675))<=((1514 + 766) -(977 + 683))) and (v239==(820 -(277 + 543)))) then v240=v91[1 + 1];v241,v242=v86(v89[v240](v14(v89,v240 + (2 -1),v91[3 + 0])));v239=1 + 0;end end else local v244=0 + 0;local v245;while true do if ((v244==0) or ((5158 -(829 + 122))<(348 + 547))) then v245=v91[1 + 1];v89[v245]=v89[v245](v14(v89,v245 + 1 + 0,v79));break;end end end elseif ((v92<=40) or ((2364 -(28 + 611))==(2003 + 320))) then if ((4742==(5160 -(250 + 168))) and (v92==(189 -150))) then local v246=0 + 0;local v247;local v248;local v249;local v250;while true do if ((v246==(0 + 0)) or ((3097 -(1346 + 327))==(556 + 153 + 1375))) then v247=0 -0;v248=nil;v246=3 -2;end if (((4242 + (2248 -(611 + 1187)))>=3489) and (v246==(102 -(10 + (361 -270))))) then v249=nil;v250=nil;v246=2 + 0;end if (((2154 -(547 + 1293))<=(3985 -(19 + 1085))) and (v246==(377 -(136 + 239)))) then while true do if ((v247==((273 -(44 + 228)) + (615 -(50 + 565)))) or ((2586 + 1401)<=((7740 -5333) -1528))) then v250=(0 -0) + 0;for v369=v248,v91[4] do local v370=0 + 0;local v371;while true do if (((274 + 153)<=(3619 + 200)) and (v370==0)) then v371=0 -0;while true do if (((0 + (237 -(46 + 191)))==v371) or ((4228 -(1299 + 302))>=((13753 -(735 + 928)) -8964))) then v250=v250 + 1;v89[v369]=v249[v250];break;end end break;end end end break;end if ((v247==(78 -(39 + 39))) or ((2030 -(102 + 46))>=3557)) then local v350=0 -0;while true do if (((2876 -2064)<((13288 -(1131 + 305)) -7129)) and (v350==0)) then v248=v91[7 -5];v249={v89[v248](v89[v248 + (2 -1) + 0])};v350=(3010 -(907 + 541)) -(1442 + 119);end if ((2289<3986) and (v350==(87 -(65 + 21)))) then v247=2 -1;break;end end end end break;end end else v89[v91[2 -0]][v89[v91[9 -(29 -23)]]]=v89[v91[4]];end elseif ((2654==(7023 -4369)) and (v92==(41 + 0))) then v42[v91[1706 -(1134 + 569)]]=v89[v91[1 + 1]];else local v255=1754 -(431 + 1323);local v256;local v257;local v258;while true do if (((1 + 0)==v255) or ((2200 -(124 + 316))<(1421 -(18 + 193)))) then v258=nil;while true do if ((1999==((7081 -3455) -1627)) and (v256==(0 -0))) then v257=v91[4 -(63 -(50 + 11))];v258=v89[v91[3 + 0]];v256=1 + 0;end if ((v256==(4 -3)) or ((5495 -(797 + 426))<=(11846 -8839))) then v89[v257 + (1068 -(450 + 617))]=v258;v89[v257]=v258[v91[4]];break;end end break;end if ((v255==(0 + 0)) or ((2469 + 1858)<(119 + 305))) then v256=0 + 0;v257=nil;v255=648 -(183 + (1100 -636));end end end elseif (((4023 -(854 + 687))<(4189 -(109 + 216))) and (v92<=(26 + 23))) then if ((v92<=(277 -(165 + 67))) or (4869<=(6120 -2439))) then if (((8127 -5611)==(6065 -3549)) and (v92<=(3 + (1573 -(1048 + 485))))) then v89[v91[2 + 0]]=v89[v91[3]];elseif ((((1822 + 2934) -(1282 + 108))>(131 + 801)) and (v92>(126 -82))) then v89[v91[1352 -(201 + 373 + 776)]]=v91[3];else v89[v91[2]]=v41[v91[3 + 0]];end elseif (((1279 -((225 -130) + 569))<=(5395 -(596 + 41))) and (v92<=(67 -20))) then if (((8196 -(18788 -13578))==(3858 -(535 + 337))) and (v92>(31 + 15))) then local v263=1290 -(1051 + 239);local v264;local v265;while true do if (((2128 -(520 + 513))>664) and (v263==(0 -(0 + 0)))) then v264=(0 -0) + 0;v265=nil;v263=3 -2;end if ((v263==(357 -(80 + 276))) or ((14 -9)>=(1903 + 1728))) then while true do if (((4179 -((1850 -1125) + 1026))<(4717 -(13 + 703 + 1032))) and (v264==(0 -0))) then v265=v91[6 -4];v89[v265](v14(v89,v265 + (1334 -(566 + 767)),v79));break;end end break;end end else local v266=732 -(297 + 435);local v267;local v268;local v269;while true do if (((20405 -16097)<=4845) and (v266==(2 -1))) then v269=nil;while true do if ((v267==(338 -((20 -4) + (1826 -(1093 + 411))))) or ((4733 -(419 + 123))>=(3368 + 1017))) then local v357=1569 -(638 + 931);while true do if (((130 + 1639 + 1198)>(390 + 678)) and (v357==(286 -(93 + 192)))) then v267=1;break;end if ((v357==(0 -0)) or (2269<390)) then v268=v91[2 + (642 -(263 + 379))];v269={};v357=1;end end end if ((v267==(1 + 0)) or ((2114 -(435 + 48))>(973 + 2020))) then for v372=1, #v88 do local v373=0 -(0 -0);local v374;while true do if ((v373==(0 -0)) or ((3 + 3841)<=2205)) then v374=v88[v372];for v427=(303 -(70 + 233)) + 0, #v374 do local v428=1489 -(380 + 1109);local v429;local v430;local v431;local v432;local v433;while true do if (((3415 -2049)<(2097 -(105 + 129))) and (v428==(0 + 0))) then v429=0 + 0;v430=nil;v428=1 + 0;end if (((3508 -(507 + 526))<=(3312 -(147 + 191))) and ((1191 -(761 + 429))==v428)) then v431=nil;v432=nil;v428=2 + 0;end if ((v428==(276 -(117 + 157))) or ((3937 -(1109 + 752))<(5249 -3952))) then v433=nil;while true do if (((5355 -(4241 -(317 + 373)))<=2766) and (v429==2)) then while true do if (((5777 -3286)==(8594 -6103)) and (v430==(1 + 0 + 0))) then v433=v431[584 -(355 + 227)];if (((v432==v89) and (v433>=v268)) or ((6287 -2495)==(1629 -521))) then local v478=0;local v479;while true do if ((4991==(5778 -(778 + 7 + 2))) and ((228 -(43 + 185))==v478)) then v479=1909 -(342 + 1567);while true do if (((4935 -(680 + 975))>(1073 -(193 + 178))) and (v479==(0 -0))) then v269[v433]=v432[v433];v431[(398 -(328 + 69)) -(0 -0)]=v269;break;end end break;end end end break;end if (((1336 -790)==(1895 -(583 + 766))) and (v430==(0 -0))) then local v475=0 -0;local v476;while true do if ((v475==(0 -0)) or ((3527 -(38 + 1183))<=1306)) then v476=0;while true do if (((2280 -(759 + 377))<(8247 -3312)) and (v476==(1 + 0))) then v430=1;break;end if ((v476==(955 -(588 + 367))) or (4972<(2415 -(804 + 991)))) then v431=v374[v427];v432=v431[1 -0];v476=1;end end break;end end end end break;end if (((10451 -5557)>=(69 + 84)) and (0==v429)) then local v471=0;while true do if (((1567 + 3368)>(1883 + 1112)) and (v471==(1 + 0))) then v429=1724 -(389 + 1334);break;end if ((0==v471) or ((5650 -(1081 + 259))<=(572 -244))) then v430=1769 -(1225 + 544);v431=nil;v471=420 -(416 + 3);end end end if (((1189 + 831)>=(309 -148)) and ((3 -(2 + 0))==v429)) then local v472=0 -0;while true do if (((994 + 2876)>=(407 + 1747)) and ((877 -(103 + 774))==v472)) then v432=nil;v433=nil;v472=1 + 0;end if ((v472==(1702 -((7140 -5664) + 225))) or (1459>(5878 -(1619 + 255)))) then v429=1 + 1;break;end end end end break;end end end break;end end end break;end end break;end if ((3034>2953) and (v266==(0 -0))) then v267=0 -0;v268=nil;v266=(2311 -1566) -(443 + 301);end end end elseif (((3721 -2439)>=337) and (v92==(1173 -(285 + 735 + 105)))) then if ((v91[4 -2]==v89[v91[1 + 3]]) or ((593 + 477)==2618)) then v78=v78 + (4 -3);else v78=v91[8 -(13 -8)];end else v89[v91[(7 + 0) -5]]=v89[v91[2 + (1203 -(124 + 1078))]] + v91[4];end elseif ((v92<=53) or ((958 + 1263)<=(2684 -(121 + 1289)))) then if ((4148>=(4240 -((1497 -(560 + 754)) + 1547))) and (v92<=(147 -96))) then if (((504 + 396)<(12828 -9125)) and (v92>50)) then if ((v89[v91[2 + 0]]==v89[v91[(20 -10) -(6 + 0)]]) or (2872<=(5 + 10))) then v78=v78 + (850 -(359 + 490));else v78=v91[3];end else local v271=0 -0;local v272;local v273;while true do if ((v271==(1761 -(506 + 1254))) or (1363>(4353 -(42 + 23 + 5)))) then while true do if (((12957 -9333)==(5114 -1490)) and (v272==(0 + 0))) then v273=v91[2 + 0];do return v14(v89,v273,v273 + v91[3]);end break;end end break;end if ((((15661 -(359 + 661)) -9722)==(3983 + 936)) and (v271==(187 -(182 + 5)))) then v272=1907 -(859 + 1048);v273=nil;v271=822 -(596 + 225);end end end elseif (((5552 -((267 -94) + 731))==(4948 -(239 + 61))) and (v92==(1134 -(407 + 675)))) then local v274=0 + 0;local v275;local v276;local v277;local v278;while true do if (((3 -2)==v274) or ((13059 -8316)<(13037 -9696))) then v277=nil;v278=nil;v274=1 + 1;end if (((568 + 3312)<((2744 -(5 + 114)) + 2224)) and (v274==(0 + 0))) then local v320=0 -0;while true do if ((0==v320) or ((11600 -(5105 + 1784))<=((3132 -(259 + 429)) -(130 + 110)))) then v275=0;v276=nil;v320=1;end if (((2 -1)==v320) or (4806<=2719)) then v274=1;break;end end end if ((4587>(6356 -4530)) and (v274==2)) then while true do if (((3786 -(803 + 632))>=((8578 -6455) -(168 + 280))) and (v275==((1603 -(1351 + 201)) -(9 + 41)))) then v278=0 -0;for v375=v276,v91[4] do local v376=549 -(108 + 441);local v377;while true do if ((3740<=(4683 -(143 + 577))) and (v376==(0 + 0))) then v377=0 -0;while true do if (((4984 -(60 + 305))>(2163 -998)) and (v377==(0 -0))) then v278=v278 + (54 -(6 + 47));v89[v375]=v277[v278];break;end end break;end end end break;end if ((v275==(0 -0)) or ((6080 -3844)<=1139)) then local v359=55 -(6 + 49);local v360;while true do if ((v359==(0 + 0)) or ((8397 -5328)>4983)) then v360=(394 -(299 + 95)) -0;while true do if (((5521 -(712 + 640))==(4721 -(486 + 66))) and (v360==(0 + 0))) then local v445=1921 -(206 + 1715);while true do if (((1933 -((184 -74) + 204))<(12307 -7908)) and (v445==1)) then v360=1 + 0;break;end if (((2130 + 1487)>=408) and (v445==(1391 -(1057 + 285 + 49)))) then v276=v91[2];v277={v89[v276](v14(v89,v276 + (3 -2),v79))};v445=1 + 0;end end end if (((936 + 2365)==3301) and (1==v360)) then v275=1;break;end end break;end end end end break;end end else local v279=0 + 0;local v280;while true do if (((1364 -(82 + 243))<(2896 + 1928)) and ((0 + 0 + 0)==v279)) then v280=v91[1 + 1];do return v14(v89,v280,v79);end break;end end end elseif ((v92<=(1701 -(1167 + 479))) or ((13143 -8618)<(959 + 811))) then if (((322 + 2863)>(298 + 2517)) and (v92==(3 + 27 + 24))) then v89[v91[2 + 0]][v89[v91[3 + (1254 -(675 + 579))]]]=v91[1513 -(783 + (2426 -(807 + 893)))];else v89[v91[7 -5]]= #v89[v91[(3 + 5) -5]];end elseif (((2751 + (3111 -1553))>=(868 + 313)) and (v92==(1536 -(540 + 940)))) then if (((3290 -2625)>=(1486 -(813 + 96))) and v89[v91[2]]) then v78=v78 + 1 + 0;else v78=v91[6 -(621 -(8 + 610))];end else v89[v91[2 -0]]=v89[v91[8 -5]][v89[v91[4]]];end v78=v78 + ((4 -3) -0);break;end if ((4269>=(3083 -(1215 + 256))) and ((0 + 0)==v100)) then local v127=0 -0;local v128;while true do if ((v127==(0 + 0)) or ((327 + 195)>(2326 + 1144))) then v128=0 + (380 -(207 + 173));while true do if (((3132 -(770 + 53))<(4121 -(44 + 90))) and (v128==(568 -(386 + 182)))) then local v138=1964 -(1272 + 692);while true do if ((v138==0) or ((6115 -(614 + 653))<(4132 -(95 + 507)))) then v91=v83[v78];v92=v91[2 -(1 + 0)];v138=3 -2;end if ((v138==1) or ((3030 + 739)>(2597 + 1825))) then v128=1;break;end end end if ((((125 -77) + 153)<=2867) and (v128==(1 -0))) then v100=1 + 0;break;end end break;end end end end break;end end break;end if (((539 + 477)==(1784 -768)) and (v98==0)) then v99=0 -0;v100=nil;v98=1;end end end end A,B=v37(v12(v82));if  not A[1] then local v101=v40[4][v78] or "?";error("Script error at ["   .. v101   .. "]:"   .. A[2]);else return v14(A,2,B);end end;end;return v39(v38(),{},v21)(...);end if (v27==0) then v28=1;v29=nil;v20=v5(v4(v20,5),"..",function(v43)if (v2(v43,2)==79) then v29=v1(v4(v43,1,1));return "";else local v93=0;local v94;while true do if (v93==0) then v94=v3(v1(v43,16));if v29 then local v112=v6(v94,v29);v29=nil;return v112;else return v94;end break;end end end end);v27=1;end if (v27==1) then v30=nil;v30=function(v44,v45,v46)if v46 then local v95=(v44/((2 + (0 -0))^(v45-1)))%((5 -3)^(((v46-(1646 -(359 + 528 + 758))) -(v45-(1 -0))) + 1 + 0));return v95-(v95%(2 -1));else local v96=(7 -5)^(v45-(44 -(25 + 18)));return (((v44%(v96 + v96))>=v96) and 1) or (0 -0);end end;v31=nil;v27=2;end if (v27==3) then v33=nil;v33=function()local v55=(0 -0) -0;local v56;local v57;local v58;local v59;while true do if (v55==(1 -0)) then return (v59 * 16777216) + (v58 * (8448 + 57088)) + (v57 * (55 + 201)) + v56;end if (v55==(0 + 0)) then v56,v57,v58,v59=v2(v20,v28,v28 + (11 -8));v28=v28 + 1 + 0 + 3;v55=3 -2;end end end;v34=nil;v27=4;end if (v27==4) then v34=function()local v60=0 + 0 + 0;local v61;local v62;local v63;local v64;local v65;local v66;while true do if (v60==(14 -11)) then if (v65==0) then if (v64==(869 -(763 + 106))) then return v66 * (0 + 0);else local v113=367 -(243 + 124);while true do if (v113==(113 -(109 + 4))) then v65=1;v63=0;break;end end end elseif (v65==(656 + 1391)) then return ((v64==(1816 -(1204 + 612))) and (v66 * ((3 -2)/(0 -0)))) or (v66 * NaN);end return v9(v66,v65-1023) * (v63 + (v64/(2^(1567 -(1278 + 237)))));end if (v60==(1541 -(1229 + 310))) then v65=v30(v62,1606 -(905 + 680),143 -112);v66=((v30(v62,79 -47)==(606 -(338 + 267))) and  -1) or (1 + 0);v60=4 -1;end if (1==v60) then v63=875 -(816 + 58);v64=(v30(v62,591 -(103 + 487),3 + 17) * ((3 -1)^(1805 -((2999 -(872 + 638)) + 284)))) + v61;v60=5 -(10 -7);end if (v60==0) then v61=v33();v62=v33();v60=1 + 0;end end end;v35=nil;v35=function(v47)local v67=0 + 0 + 0;local v68;local v69;while true do if ((1 + 1)==v67) then v69={};for v103=1449 -(77 + 1371), #v68 do v69[v103]=v3(v2(v4(v68,v103,v103)));end v67=1362 -(619 + 740);end if (v67==(0 + 0)) then v68=nil;if  not v47 then v47=v33();if (v47==(0 + 0)) then return "";end end v67=2 -1;end if (v67==(3 -0)) then return v7(v69);end if ((1 + 0)==v67) then v68=v4(v20,v28,(v28 + v47) -(1 -0));v28=v28 + v47;v67=(7 -5) -0;end end end;v27=5;end if (6==v27) then v38=nil;v38=function()local v70=0;local v71;local v72;local v73;local v74;local v75;local v76;local v77;while true do if ((8 -5)==v70) then v77=nil;while true do if (2==v71) then local v109=0;while true do if (v109~=(655 -(631 + 23))) then else for v115=3 -2,v33() do local v116=0 -0;local v117;while true do if (0==v116) then v117=v31();if (v30(v117,1030 -(754 + 275),1292 -(150 + 1141))~=(0 -0)) then else local v129=0;local v130;local v131;local v132;local v133;local v134;while true do if (v129~=2) then else v134=nil;while true do if (v130==2) then while true do if (v131~=2) then else if (v30(v133,1,1 + 0)==1) then v134[1 + 1]=v77[v134[2 + 0]];end if (v30(v133,2,128 -(55 + 71))==1) then v134[3]=v77[v134[3]];end v131=1557 -(323 + 1231);end if ((1174 -(206 + 967))==v131) then local v286=1934 -(1559 + 375);while true do if ((0 -0)==v286) then v134={v32(),v32(),nil,nil};if (v132==(0 -0)) then local v331=0 + 0;local v332;while true do if (v331~=0) then else v332=0;while true do if (v332~=0) then else v134[3]=v32();v134[1377 -(1051 + 322)]=v32();break;end end break;end end elseif (v132==1) then v134[3]=v33();elseif (v132==2) then v134[1525 -(1238 + 284)]=v33() -((2 + 0)^16);elseif (v132==3) then local v436=682 -(41 + 641);local v437;local v438;local v439;while true do if (v436==(1 + 0)) then v439=nil;while true do if (v437==(1528 -(680 + 847))) then while true do if (v438~=(0 + 0)) then else v439=1072 -(142 + 930);while true do if (0~=v439) then else v134[3]=v33() -((588 -(242 + 344))^(1994 -(440 + 1538)));v134[4]=v32();break;end end break;end end break;end if (v437~=(656 -(580 + 76))) then else v438=0;v439=nil;v437=914 -(743 + 170);end end break;end if (v436==0) then v437=0 + 0;v438=nil;v436=1;end end end v286=1;end if (v286==1) then v131=7 -5;break;end end end if (v131~=3) then else if (v30(v133,1 + 2,2 + 1)==1) then v134[13 -9]=v77[v134[4]];end v72[v115]=v134;break;end if (v131==(173 -(171 + 2))) then local v288=0;local v289;while true do if (v288==0) then v289=1802 -(1548 + 254);while true do if (v289~=(1 + 0)) then else v131=1;break;end if (v289~=(0 + 0)) then else v132=v30(v117,2,6 -3);v133=v30(v117,8 -4,27 -21);v289=1;end end break;end end end end break;end if (v130==(56 -(7 + 49))) then local v141=0;while true do if (0~=v141) then else v131=880 -(542 + 338);v132=nil;v141=2 -1;end if (1~=v141) then else v130=2 -1;break;end end end if (v130==(265 -(45 + 219))) then v133=nil;v134=nil;v130=2 + 0;end end break;end if (v129~=(1572 -(1062 + 509))) then else v132=nil;v133=nil;v129=315 -(206 + 107);end if (v129==(302 -(87 + 215))) then v130=0 + 0;v131=nil;v129=1794 -(67 + 1726);end end end break;end end end v71=8 -5;break;end if (v109==(0 + 0)) then for v118=1 + 0,v76 do local v119=0 + 0;local v120;local v121;local v122;while true do if (v119==(1 + 0)) then v122=nil;while true do if (1~=v120) then else if (v121==(1937 -(1748 + 188))) then v122=v31()~=0;elseif (v121==(2 + 0)) then v122=v34();elseif (v121~=3) then else v122=v35();end v77[v118]=v122;break;end if (0~=v120) then else local v136=0;local v137;while true do if (v136==(0 + 0)) then v137=867 -(109 + 758);while true do if (v137==0) then local v163=1580 -(890 + 690);while true do if (v163==(745 -(137 + 608))) then v121=v31();v122=nil;v163=1;end if (v163==(1 + 0)) then v137=727 -(17 + 709);break;end end end if (v137==(1337 -(134 + 1202))) then v120=1151 -(459 + 691);break;end end break;end end end end break;end if (v119==0) then v120=0;v121=nil;v119=222 -(220 + 1);end end end v75[3 + 0]=v31();v109=1 + 0;end end end if (v71~=(0 -0)) then else v72={};v73={};v74={};v71=1;end if ((1820 -(1194 + 623))==v71) then local v110=0 -0;while true do if (v110~=(0 -0)) then else for v123=1 + 0,v33() do v73[v123-(1 + 0)]=v38();end for v125=1,v33() do v74[v125]=v33();end v110=1;end if (v110~=1) then else return v75;end end end if (v71~=1) then else local v111=460 -(237 + 223);while true do if (v111~=0) then else v75={v72,v73,nil,v74};v76=v33();v111=1;end if ((2 -1)==v111) then v77={};v71=1087 -(642 + 443);break;end end end end break;end if (v70~=0) then else local v102=0 + 0;while true do if (v102==1) then v70=1 -0;break;end if (v102==0) then v71=0 + 0;v72=nil;v102=408 -(69 + 338);end end end if (v70==1) then v73=nil;v74=nil;v70=1787 -(1352 + 433);end if (v70==2) then v75=nil;v76=nil;v70=2 + 1;end end end;v39=nil;v27=7;end end end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==4) then v13=select;v14=unpack or table.unpack;v15=tonumber;v0=5;end end end
