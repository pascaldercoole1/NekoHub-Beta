--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.1) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (1==v0) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=getfenv or function()return _ENV;end;v11=setmetatable;v12=pcall;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v3(v1(v29,16));if v28 then local v101=v6(v83,v28);v28=nil;return v101;else return v83;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v84=(v31/((1 + 1)^(v32-(987 -(361 + 625)))))%((1 + 1)^(((v33-((4 -3) + 0)) -(v32-(2 -1))) + 1));return v84-(v84%(1588 -((426 -117) + 1278)));else local v85=(2 -0)^(v32-(1 + 0));return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 -0);end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1;return v47;end local function v35()local v48=0 + 0;local v49;local v50;while true do if (v48==(1 + 0)) then return (v50 * ((1985 -(674 + 443)) -612)) + v49;end if (v48==(0 -0)) then v49,v50=v2(v25,v27,v27 + (1402 -(1144 + 256)));v27=v27 + 1 + 1;v48=2 -1;end end end local function v36()local v51,v52,v53,v54=v2(v25,v27,v27 + 3);v27=v27 + 3 + 1;return (v54 * (13518938 + 3258278)) + (v53 * 65536) + (v52 * (2254 -(904 + 1094))) + v51;end local function v37()local v55=v36();local v56=v36();local v57=414 -(390 + 23);local v58=(v30(v56,(1020 -(760 + 259)) -0,2007 -(1758 + 229)) * ((1 + 1)^((1944 -(1233 + 659)) -20))) + v55;local v59=v30(v56,15 + 6,747 -(285 + 431));local v60=((v30(v56,1001 -(17 + 952))==(2 -1)) and  -(1 -0)) or (2 -1);if (v59==((760 -(594 + 166)) + 0)) then if (v58==(0 + 0)) then return v60 * (0 -(0 -0));else v59=1 + (812 -(137 + 675));v57=92 -(10 + 82);end elseif (v59==(7442 -5395)) then return ((v58==(0 -0)) and (v60 * ((3 -2)/(797 -(30 + 767))))) or (v60 * NaN);end return v9(v60,v59-(2351 -(636 + 692))) * (v57 + (v58/((1 + 1 + 0)^(12 + 40))));end local function v38(v39)local v61;if  not v39 then v39=v36();if (v39==(0 -0)) then return "";end end v61=v4(v25,v27,(v27 + v39) -(688 -(648 + 39)));v27=v27 + v39;local v62={};for v74=3 -2, #v61 do v62[v74]=v3(v2(v4(v61,v74,v74)));end return v7(v62);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=1529 -(101 + 1428);local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v63~=2) then else v68=nil;v69=nil;v63=3;end if (v63~=1) then else v66=nil;v67=nil;v63=2;end if (v63==0) then v64=0;v65=nil;v63=1;end if (3==v63) then v70=nil;while true do local v86=0 + 0;while true do if (v86~=0) then else if (v64==1) then local v106=0;while true do if (v106==0) then v68={v65,v66,nil,v67};v69=v36();v106=1;end if (v106~=1) then else v70={};v64=2;break;end end end if (v64==(1920 -(1704 + 214))) then local v107=0;while true do if (v107~=(1765 -(558 + 1207))) then else for v112=1 + 0,v69 do local v113=0;local v114;local v115;local v116;local v117;while true do if (v113==0) then v114=0 + 0;v115=nil;v113=705 -(18 + 686);end if ((4 -2)==v113) then while true do if (v114==(1 + 0)) then v117=nil;while true do if ((1 + 0)==v115) then if (v116==1) then v117=v34()~=0;elseif (v116==2) then v117=v37();elseif (v116~=3) then else v117=v38();end v70[v112]=v117;break;end if (v115~=(0 -0)) then else local v135=0 + 0;while true do if (v135~=(1905 -(1135 + 770))) then else v116=v34();v117=nil;v135=1;end if (v135==1) then v115=2 -1;break;end end end end break;end if (v114==0) then local v129=0;while true do if (0~=v129) then else v115=1979 -(794 + 1185);v116=nil;v129=450 -(413 + 36);end if (v129~=(1413 -(1370 + 42))) then else v114=1;break;end end end end break;end if (v113==(1 + 0)) then v116=nil;v117=nil;v113=2;end end end v68[1678 -(1074 + 601)]=v34();v107=1;end if (v107==1) then for v118=358 -(36 + 321),v36() do local v119=0 + 0;local v120;local v121;while true do if (0~=v119) then else v120=0;v121=nil;v119=1277 -(274 + 1002);end if (v119~=(25 -(22 + 2))) then else while true do if (v120~=0) then else v121=v34();if (v30(v121,1,1)==0) then local v130=0 + 0;local v131;local v132;local v133;while true do if (0==v130) then local v150=1071 -(749 + 322);while true do if (v150==0) then v131=v30(v121,2,482 -(260 + 219));v132=v30(v121,4,10 -4);v150=3 -2;end if (v150==1) then v130=2 -1;break;end end end if (v130==2) then if (v30(v132,201 -(174 + 26),1 + 0)~=(1 + 0)) then else v133[6 -4]=v70[v133[2 -0]];end if (v30(v132,1 + 1,2 + 0)==(279 -(207 + 71))) then v133[3]=v70[v133[3]];end v130=4 -1;end if (v130==(581 -(447 + 133))) then local v151=0 -0;while true do if (v151~=0) then else v133={v35(),v35(),nil,nil};if (v131==(0 -0)) then local v323=0 -0;while true do if (v323==(1096 -(213 + 883))) then v133[3]=v35();v133[1379 -(771 + 604)]=v35();break;end end elseif (v131==(1 + 0)) then v133[3]=v36();elseif (v131==2) then v133[3]=v36() -(2^(750 -(121 + 613)));elseif (v131==(724 -(491 + 230))) then local v416=0 + 0;local v417;while true do if (v416==(378 -(296 + 82))) then v417=0;while true do if ((540 -(360 + 180))==v417) then v133[3]=v36() -(2^16);v133[4]=v35();break;end end break;end end end v151=1;end if (v151~=(1 + 0)) then else v130=1116 -(961 + 153);break;end end end if (v130~=(1 + 2)) then else if (v30(v132,3,3)==1) then v133[4]=v70[v133[169 -(118 + 47)]];end v65[v118]=v133;break;end end end break;end end break;end end end v64=10 -7;break;end end end v86=1;end if (v86~=1) then else if (v64==(0 -0)) then v65={};v66={};v67={};v64=1 + 0;end if ((8 -5)~=v64) then else local v108=0;local v109;while true do if ((1337 -(499 + 838))==v108) then v109=0 + 0;while true do if (0==v109) then for v123=1,v36() do v66[v123-1]=v42();end for v125=1,v36() do v67[v125]=v36();end v109=1;end if (v109~=(1630 -(1196 + 433))) then else return v68;end end break;end end end break;end end end break;end end end local function v43(v44,v45,v46)local v71=v44[1];local v72=v44[2];local v73=v44[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==1) then v79={...};v80=v13("#",...) -1;v76=2;end if (2==v76) then v81=nil;v81=function()local v87=v71;local v88=v72;local v89=v73;local v90=v41;local v91={};local v92={};local v93={};for v97=0 -0,v80 do if (((2464 -(223 + 168))>=(93 + 217)) and (v97>=v89)) then v91[v97-v89]=v79[v97 + 1 + 0];else v93[v97]=v79[v97 + 1 + 0 + 0];end end local v94=(v80-v89) + 1;local v95;local v96;while true do local v98=0;local v99;while true do if ((v98==(0 + 0)) or ((5071 -(1164 + 253))==(5996 -3337))) then v99=0 + 0;while true do if (((4953 -(663 + 407))==(3027 + 856)) and (v99==0)) then local v111=987 -(548 + 439);while true do if ((2589>=(585 -(42 + 146))) and (v111==(639 -(515 + (493 -369))))) then local v122=0;while true do if ((v122==(1788 -(421 + 1366))) or ((8233 -5126)<=(456 + 2445))) then v111=1 + 0;break;end if (((5934 -4449)<=2272) and ((444 -(384 + 60))==v122)) then v95=v87[v77];v96=v95[3 -2];v122=(2 + 0) -(1223 -(1130 + 92));end end end if (((14665 -9754)>=(3605 -(778 + (1324 -(23 + 116))))) and (v111==((2868 -(1264 + 186)) -(852 + 565)))) then v99=1 + 0;break;end end end if ((v99==(1 + 0)) or (((2498 + 3121) -3486)>=(4500 -(1615 + 289)))) then if (((881 + 2966)==(8327 -4480)) and (v96<=((140 -79) -33))) then if ((v96<=(223 -(96 + 114))) or (904<=(165 + 30))) then if (((850 + 458)==(1653 -(194 + 151))) and (v96<=(15 -9))) then if (((2943 + 1962)>(2005 -(383 + 277))) and (v96<=(3 -1))) then if ((v96<=(0 + 0)) or ((8912 -7029)==(4275 -(203 + 81)))) then v93[v95[(1 + 1) -0]][v93[v95[2 + 1 + 0]]]=v95[4];elseif ((v96>(3 -2)) or ((353 + 3997)<(8257 -4728))) then local v153=(0 + 0) -0;local v154;local v155;while true do if ((((2283 + 439) -((1928 -(551 + 1039)) + 198))>(7307 -5641)) and (v153==(1 + (1881 -(1702 + 179))))) then for v309=v154 + (1 -0),v78 do v8(v155,v93[v309]);end break;end if ((686<1202) and (v153==(0 + 0))) then v154=v95[2];v155=v93[v154];v153=1 + 0;end end else v93[v95[2]]=v93[v95[7 -(12 -8)]]%v95[8 -4];end elseif ((v96<=4) or ((9974 -6269)>(13381 -9596))) then if (((1488 -(67 + 559))<=(9358 -6085)) and (v96==(2 + 1))) then v93[v95[1371 -(1089 + 280)]]=v95[9 -6] + v93[v95[4 + 0]];else local v158=0;local v159;local v160;local v161;local v162;local v163;local v164;while true do if (((1460 + 2783)==(872 + 3371)) and (v158==(1 + (0 -0)))) then v161=nil;v162=nil;v158=2 -0;end if (((3728 -(325 + (1448 -(883 + 395))))<=4949) and ((1859 -(129 + 1727))==v158)) then while true do if (((3492 + 420)>=(3666 -(51 + 644))) and (v159==(2 + 1))) then if (v164 or ((1650 -(307 + 57))>=2332)) then local v384=0 -0;local v385;while true do if ((2584>(48 + 148)) and (v384==(60 -(39 + 21)))) then v385=0 + 0;while true do if ((v385==(0 -0)) or ((11736 -7422)<((11032 -(302 + 632)) -6639))) then v93[v162]=v164;v77=v95[3];break;end end break;end end else v77=v77 + ((2 + 0) -1);end break;end if (((15186 -10329)>=3029) and (v159==(446 -(350 + 95)))) then local v324=0 -0;while true do if ((v324==(1 -(0 -0))) or (3747<=(575 + 2086))) then v159=(14 -10) -2;break;end if (((265 + 1114)<=(3756 + 562)) and (v324==(0 -0))) then v162=v160 + 2;v163={v93[v160](v93[v160 + 1],v93[v162])};v324=1 + 0;end end end if ((3565>=(2282 -(176 + 1758))) and (v159==(2 + 0))) then local v325=557 -(295 + 262);while true do if ((((2353 -1718) + 3796)>(5537 -(567 + 666))) and ((1296 -(795 + (610 -110)))==v325)) then v159=1627 -(1531 + 93);break;end if (((1726 + 208)<=(1900 + (3185 -2400))) and (0==v325)) then for v400=1 -0,v161 do v93[v162 + v400]=v163[v400];end v164=v163[1];v325=1 -0;end end end if ((4446==(16860 -12414)) and (v159==(1405 -(168 + (3039 -1802))))) then v160=v95[(10 -7) -1];v161=v95[5 -1];v159=3 -2;end end break;end if (((25 + 31)<(2284 -(214 + 438))) and ((966 -(659 + 307))==v158)) then v159=0;v160=nil;v158=1 + 0 + 0;end if ((v158==(1541 -(581 + 930 + 28))) or ((7622 -3280)==(188 + 101))) then v163=nil;v164=nil;v158=3;end end end elseif ((v96>(23 -18)) or (1650==3851)) then local v165=1406 -(652 + 754);local v166;local v167;while true do if (((1338 + 423)<=(4952 -(215 + 1086))) and (v165==(1351 -(718 + 632)))) then while true do if ((v166==((29 + 935) -(65 + 899))) or ((1628 + 1262)<(204 + 2276))) then v167=v95[2];do return v14(v93,v167,v78);end break;end end break;end if (((989 + (1983 -1549))==(606 + 817)) and (v165==(0 -0))) then v166=0 -0;v167=nil;v165=1 -(0 + 0);end end else local v168=0;local v169;local v170;while true do if (((11281 -7305)>(9 + 26)) and ((1 -0)==v168)) then for v310=v169 + (1663 -(1111 + 551)),v95[4] do v170=v170   .. v93[v310];end v93[v95[2 + 0]]=v170;break;end if (((4432 + 195)==(4842 -(153 + 62))) and (v168==(0 + 0))) then v169=v95[4 -1];v170=v93[v169];v168=507 -(140 + 366);end end end elseif ((v96<=(1317 -(702 + 606))) or ((423 + 1980)==2104)) then if (((148 + 2889)>=(741 + 2202)) and (v96<=(1378 -(695 + 676)))) then local v138=0 + 0;local v139;local v140;while true do if (((225 + 2667)>318) and (v138==(0 -0))) then v139=0 -0;v140=nil;v138=2 -1;end if (((2219 + (1345 -(7 + 31)))<=((18968 -13823) -(735 + 289))) and (v138==(2 -1))) then while true do if ((v139==(0 -0)) or (1587>=((146 + 4263) -(199 + 77)))) then v140=v95[(2 -0) + 0];v93[v140]=v93[v140]();break;end end break;end end elseif ((2768==2768) and (v96==(20 -12))) then if ((v93[v95[2]]==v93[v95[834 -(542 + 288)]]) or ((2599 -642)>=4505)) then v77=v77 + 1;else v77=v95[(47 -(27 + 14)) -3];end else v93[v95[2 -0]]=v93[v95[(444 + 1262) -(433 + 1270)]][v95[8 -4]];end elseif ((v96<=(3 + 8)) or ((2686 -1039)>(6004 -1328))) then if ((v96>(7 + 3)) or (1652>(8975 -5115))) then v93[v95[1782 -(552 + 1228)]]={};else v77=v95[2 + 1];end elseif ((((5386 -2665) -(31 + 15))<(13655 -10467)) and (v96==(7 + 5))) then if ((v93[v95[2 -0]]~=v93[v95[7 -3]]) or ((150 -46)>(3059 -(766 + 729)))) then v77=v77 + 1 + 0;else v77=v95[469 -(168 + 298)];end else for v276=v95[1 + 1],v95[3 + 0] do v93[v276]=nil;end end elseif ((v96<=(38 -18)) or ((8 + 18)>(761 + 495))) then if (((4552 -(82 + 1227))>((5293 -(628 + 1143)) -(76 + 266))) and (v96<=16)) then if ((v96<=((1845 -(428 + 529)) -(19 + 855))) or (((91 -68) + 2201)>=(2915 + 490))) then local v141=0;local v142;local v143;while true do if ((v141==(1716 -(1522 + 193))) or ((1460 + 867)>2650)) then while true do if (((3427 -(80 + 1191))<=4857) and (v142==(0 -0))) then v143=v95[1 + 1];v93[v143]=v93[v143](v14(v93,v143 + 1 + (0 -0),v95[3]));break;end end break;end if (((3548 + 855)<(4411 + 432)) and ((1598 -(1230 + (514 -(58 + 88))))==v141)) then v142=0 + 0;v143=nil;v141=1148 -(897 + 250);end end elseif ((v96>15) or (((6527 -(688 + 1311)) -(40 + 1206))<(496 -212))) then v93[v95[5 -3]]= #v93[v95[1856 -(376 + 1477)]];else v93[v95[2]]=v45[v95[1049 -(347 + 699)]];end elseif (((1610 + 2685)>921) and (v96<=(28 -10))) then if ((v96>(55 -38)) or ((1473 -(612 + 571))>(1839 -1350))) then v93[v95[1454 -(221 + (2781 -1550))]]=v93[v95[442 -(216 + 223)]][v93[v95[1331 -((3244 -1964) + 47)]]];elseif (((3717 -2633)==1084) and (v95[1 + 1]==v93[v95[6 -2]])) then v77=v77 + 1;else v77=v95[1 + 2];end elseif (((1583 + 1920)>=((1886 + 6233) -4625)) and (v96==(1972 -(1796 + 157)))) then local v180=0;local v181;local v182;local v183;local v184;while true do if (((1175 -((911 -(107 + 743)) + 633))<1644) and (v180==(1180 -(1022 + (366 -208))))) then v181=373 -(68 + 305);v182=nil;v180=1841 -(698 + 1142);end if ((v180==(698 -(470 + (589 -363)))) or ((10530 -7549)<(1674 -1272))) then while true do if ((v181==(1084 -(802 + 281))) or ((3824 -(756 + 1119))<=295)) then v184=0 -0;for v359=v182,v95[(3122 -(1052 + 302)) -(1537 + 227)] do local v360=1514 -(907 + 607);local v361;while true do if ((v360==0) or ((7962 -(11365 -6415))>=(15644 -11655))) then v361=0 + 0;while true do if ((v361==((621 + 58) -(373 + 306))) or ((1672 + 78)<(2696 -(295 + 187 + 995)))) then v184=v184 + (1 -0);v93[v359]=v183[v184];break;end end break;end end end break;end if (((6253 -(1031 + 1678))<=(10593 -6839)) and (v181==0)) then local v329=1331 -(1189 + 142);local v330;while true do if (((0 -0)==v329) or ((12131 -7524)<2549)) then v330=0 + 0;while true do if (((3890 -(443 + 314))>=(546 + 539)) and (v330==(343 -(266 + 77)))) then v182=v95[2 -0];v183={v93[v182](v14(v93,v182 + (895 -(719 + 175)),v78))};v330=1966 -(368 + 1597);end if ((3352==3352) and (v330==(1 + 0))) then v181=3 -2;break;end end break;end end end end break;end if ((v180==(849 -(475 + (1091 -718)))) or ((4611 -2079)==(3380 -1711))) then v183=nil;v184=nil;v180=2 + 0;end end else v93[v95[1370 -(709 + 659)]]=v93[v95[9 -6]];end elseif ((((676 -362) + 2416)<=2760) and (v96<=(19 + 5))) then if (((710 + 2540)<=(6711 -3058)) and (v96<=(8 + 14))) then if (((140 + 1710)<(5608 -3031)) and (v96==(16 + 5))) then local v187=0;local v188;local v189;local v190;while true do if ((v187==(1 -0)) or ((3639 -(377 + 452))>=(9393 -5090))) then v190=v93[v188 + 1 + 1];if (((4751 -3308)>=(29 + 29)) and (v190>(0 -0))) then if (((730 + 317)==1047) and (v189>v93[v188 + 1 + 0])) then v77=v95[3];else v93[v188 + (716 -(306 + 407))]=v189;end elseif (((4532 -(1446 + 116))>=2459) and (v189<v93[v188 + (3 -2)])) then v77=v95[3];else v93[v188 + (8 -5)]=v189;end break;end if ((2430<(6058 -(659 + 1268))) and ((1786 -(98 + 1688))==v187)) then local v297=0 + 0;while true do if (((3 -2)==v297) or ((4221 -((1394 -(107 + 382)) + 756))>(6027 -1943))) then v187=1;break;end if ((4634>=((3745 -(1611 + 44)) -1339)) and (v297==(335 -(325 + 10)))) then v188=v95[5 -3];v189=v93[v188];v297=1 -0;end end end end elseif (((2339 -(942 + 996))<=2612) and v93[v95[1 + 1]]) then v77=v77 + (523 -(402 + 120));else v77=v95[1731 -(261 + 1467)];end elseif ((2690==2690) and (v96==23)) then v45[v95[3]]=v93[v95[2 + 0]];else local v193=0 + 0;local v194;local v195;while true do if ((v193==((1465 -(540 + 923)) -1)) or ((7462 -4479)==(3957 -1149))) then while true do if ((v194==(64 -(45 + 19))) or ((1942 + 779)<=(2200 -(426 + 946)))) then v195=v95[2 + 0];v93[v195]=v93[v195](v14(v93,v195 + (2 -1),v78));break;end end break;end if (((1641 -(645 + 996))==v193) or (859>2736)) then v194=1101 -(342 + 759);v195=nil;v193=508 -(288 + 219);end end end elseif (((185 + 11 + 6)<(809 + 634)) and (v96<=26)) then if (((3758 -(1356 + 250))<=(6564 -(618 + 402 + (1369 -(379 + 233))))) and (v96==(321 -(214 + 82)))) then do return;end else local v196=0;local v197;local v198;while true do if ((v196==1) or ((12262 -8166)<(205 -(424 -278)))) then while true do if ((((1925 -(353 + 367)) + 3566)>(2459 -(290 + 1094))) and (v197==(0 -0))) then v198=v95[5 -3];do return v93[v198](v14(v93,v198 + 1 + 0,v95[1465 -(1241 + 221)]));end break;end end break;end if (((1345 -(600 + 350))<(8502 -5167)) and (v196==(0 + 0))) then v197=0 + 0;v198=nil;v196=2 -1;end end end elseif ((v96>(1097 -(60 + 1010))) or (((8268 -(1048 + 101)) -4963)>(278 + 4397))) then v93[v95[(1 -0) + 1]][v95[4 -1]]=v95[8 -4];else v93[v95[3 -1]][v95[3 + 0]]=v93[v95[1 + 3]];end elseif (((2694 + 1885)==((929 -592) + 4242)) and (v96<=(1 + 41))) then if ((v96<=(118 -83)) or ((554 + 1231)>=(931 + 605 + 474))) then if (((380 + 67)==(541 -(64 + 30))) and (v96<=(2 + 29))) then if (((1 + 3076)<=4908) and (v96<=(108 -79))) then local v144=0 + 0;local v145;local v146;local v147;while true do if (((2696 -(52 + (159 -100)))>=(696 + (1890 -(427 + 835)))) and (v144==(1 + 0))) then v147=nil;while true do if ((v145==(0 -0)) or ((1338 + (745 -(270 + 386)))==(544 -(37 + (66 -(4 + 43)))))) then local v315=182 -(123 + (1656 -(674 + 923)));while true do if ((v315==(0 + 0)) or ((8406 -4957)>=(4382 -(93 + 15 + 89)))) then v146=0;v147=nil;v315=1;end if (((3629 -973)==2656) and (v315==(483 -(330 + 152)))) then v145=1;break;end end end if (((3 -2)==v145) or (((15341 -9466) -(421 + 954))<=(2989 -(484 + 1)))) then while true do if ((v146==(0 -(446 -(325 + 121)))) or ((1657 -(69 + 15))<=(2020 -(715 + 843)))) then v147=v95[7 -5];v93[v147](v14(v93,v147 + 1,v95[1800 -(48 + 1749)]));break;end end break;end end break;end if ((v144==(1421 -(818 + 603))) or ((989 -(85 + 75))>(761 + 2761))) then v145=0 -0;v146=nil;v144=1538 -(104 + 1433);end end elseif ((2312<3170) and (v96==30)) then local v203=1512 -(272 + 1240);local v204;local v205;while true do if ((v203==(0 + 0)) or (867>(4994 -(253 + 481)))) then v204=v95[2];v205={};v203=195 -(87 + 107);end if ((v203==(940 -(694 + 245))) or ((265 -(202 + 51))>=((1646 + 2350) -(1058 + 150)))) then for v316=1 + 0, #v92 do local v317=0;local v318;local v319;while true do if (((7382 -2766)>(7583 -(371 + 5313))) and (v317==(3 -2))) then while true do if (((5356 -(637 + (3346 -(1487 + 503))))==((5090 -(450 + 484)) -(299 + 494))) and (v318==(0 + 0))) then v319=v92[v316];for v418=0 + 0, #v319 do local v419=1837 -(724 + 1113);local v420;local v421;local v422;local v423;local v424;while true do if (((6517 -3415)>=(1207 + 932)) and (v419==1)) then v422=nil;v423=nil;v419=2;end if (((2782 -(97 + 285))<(367 + 4110)) and (2==v419)) then v424=nil;while true do if ((v420==(0 + 0)) or ((561 -336)>=(1981 + 708))) then v421=0;v422=nil;v420=1 + 0;end if ((1673<=(227 + 1547)) and ((1 + 0)==v420)) then v423=nil;v424=nil;v420=1745 -(338 + 1405);end if ((((6962 -(20 + 99)) -2343)>(3198 -1616)) and (v420==(6 -4))) then while true do if ((v421==(983 -(241 + 742))) or (1143>=(309 + 4111))) then local v460=725 -(702 + 23);local v461;while true do if ((v460==(0 + (0 -0))) or ((5995 -(1433 + 35 + 172))<(1620 -(974 + 93)))) then v461=0 + 0;while true do if (((907 + 706)<(3401 -1780)) and (v461==(1 + 0))) then v421=(826 -(378 + 447)) -0;break;end if ((0==v461) or ((586 + 557)<(61 + 483))) then local v466=67 -(47 + 20);while true do if ((v466==(2 -1)) or (4720==(1437 -949))) then v461=1 + 0;break;end if (((467 -(1025 -(191 + 685)))<2094) and (v466==(0 + 0))) then v422=v319[v418];v423=v422[886 -(768 + 117)];v466=1;end end end end break;end end end if ((((5900 -(620 + 1338)) -(375 + 442))>(6745 -4814)) and ((1 -0)==v421)) then v424=v422[2 + 0];if ((1268<=(3242 -(76 + 238))) and (v423==v93) and (v424>=v204)) then local v463=0 + 0;local v464;while true do if ((((12333 -8975) -(87 + 67))>394) and (v463==(0 + 0))) then v464=0;while true do if (((3148 -(492 + 59))>=(1657 -(1222 + 297))) and (v464==(464 -(439 + 25)))) then v205[v424]=v423[v424];v422[1 -0]=v205;break;end end break;end end end break;end end break;end end break;end if ((v419==0) or ((4391 -1376)<(4306 -(1449 + 63)))) then v420=1730 -(621 + 1109);v421=nil;v419=3 -2;end end end break;end end break;end if ((((8182 -4981) -(150 + 124))>(1091 -(20 + 156))) and (v317==(1824 -(750 + 1074)))) then v318=0;v319=nil;v317=1;end end end break;end end elseif ((2090<(4787 -(295 + 547))) and (v93[v95[2]]<=v93[v95[16 -12]])) then v77=v77 + (2 -1);else v77=v95[2 + 1];end elseif ((v96<=(88 -55)) or ((4958 -(177 + (2642 -(307 + 1296))))>=(764 + 4017))) then if ((v96==(59 -27)) or (((1682 + 806) -1857)==(6778 -2803))) then v93[v95[2]][v93[v95[3]]]=v93[v95[4]];elseif (((8554 -5116)<=(7127 -(3323 + 166))) and (v93[v95[2 + 0]]<v93[v95[1121 -(683 + 434)]])) then v77=v77 + (1 -0);else v77=v95[3];end elseif ((144<(882 + 2814 + 791)) and (v96>(96 -(55 + 7)))) then local v208=0;local v209;local v210;local v211;local v212;while true do if ((v208==(3 -2)) or ((5561 -(613 + 786))<=((609 -(99 + 373)) + (4514 -(654 + 389))))) then v211=nil;v212=nil;v208=1 + 1;end if ((v208==0) or (3837<1691)) then v209=1500 -((2033 -882) + 349);v210=nil;v208=1;end if ((1027<=(8593 -4839)) and (v208==(5 -3))) then while true do if ((0==v209) or (464>(5638 -(943 + 360 + 127)))) then local v336=0 + 0;while true do if ((v336==(1 + (1256 -(1037 + 219)))) or ((3906 -(507 + 884))<478)) then v209=(6 -3) -2;break;end if ((v336==(0 -0)) or ((5757 -(6343 -(69 + 1710)))>1446)) then v210=v95[592 -(263 + 327)];v211=v93[v210];v336=1;end end end if ((3332>=(650 -(381 + 251))) and (v209==(1 + 0))) then v212=v95[3];for v367=(1076 -(130 + 2)) -(128 + 815),v212 do v211[v367]=v93[v210 + v367];end break;end end break;end end else v46[v95[5 -2]]=v93[v95[2 -0]];end elseif (((827 + 2233)>=(2501 -(445 + 2))) and (v96<=(1160 -(920 + 202)))) then if ((v96<=(180 -(38 + 106))) or (4211<=(4572 -(1490 + 296)))) then if ((((5386 -(32 + 605)) -(141 + 649))>=(1642 + 937)) and (v93[v95[153 -((331 -(62 + 150)) + 32)]]==v95[13 -9])) then v77=v77 + 1 + 0;else v77=v95[2 + 1];end elseif ((v96>(1023 -(587 + 399))) or (((5548 -3925) -(176 + 989))==(4430 -(29 + 98)))) then local v216=193 -((161 -(12 + 41)) + 85);local v217;local v218;local v219;local v220;while true do if (((2332 -((1934 -(23 + 1705)) + 1485))<(1053 + 392)) and (v216==(1146 -(266 + 878)))) then while true do if ((2057>=(472 -(28 + 310))) and (v217==(1 + 0))) then local v338=0 + 0;local v339;while true do if ((v338==(0 + 0)) or ((2106 -(109 + 218))>=(912 + 3245))) then v339=35 -(6 + 29);while true do if ((v339==0) or ((2512 + 594)<=(829 + 246 + 131))) then local v428=0;while true do if (((5264 -(128 + 1196))>=(3 + 21)) and ((146 -(26 + 119))==v428)) then v339=430 -(377 + 52);break;end if ((v428==((0 -0) -0)) or ((1544 + 479)>=(15775 -11788))) then v220=v93[v218] + v219;v93[v218]=v220;v428=1 + 0;end end end if ((982<=(2080 + 327)) and (v339==(1059 -((1246 -(134 + 717)) + 663)))) then v217=4 -(1 + 1);break;end end break;end end end if ((v217==((605 + 283) -(466 + 422))) or ((1033 + 759)>2554)) then local v340=0 -0;while true do if ((3730>=(2287 + 1153)) and (v340==(0 -(0 -0)))) then local v391=(159 -86) -(51 + 22);while true do if (((7022 -4906)<=3597) and (v391==((1444 -(80 + 1362)) -(1 + 0)))) then v340=1 -0;break;end if ((v391==0) or ((11990 -7139)<(2067 + 1907))) then v218=v95[2];v219=v93[v218 + (518 -(375 + 141))];v391=1 + 0;end end end if (((161 + 17)<4291) and (v340==(4 -(1070 -(647 + 420))))) then v217=1 + 0;break;end end end if ((v217==2) or ((338 + 310)>1469)) then if ((v219>0) or ((257 + 3671)<(3737 -(587 + 246)))) then if (((3567 -1106)>=(2354 -1525)) and (v220<=v93[v218 + 1])) then local v404=1780 -(930 + 850);while true do if ((v404==0) or ((2499 -1671)>=(1944 + 52))) then v77=v95[10 -7];v93[v218 + (11 -8)]=v220;break;end end end elseif ((v220>=v93[v218 + 1 + 0]) or ((6008 -(1604 + 165))<(3664 -(251 + 127)))) then local v405=369 -(36 + 40 + 293);local v406;while true do if ((v405==(0 + 0)) or ((7604 -4974)>=(4363 -1043))) then v406=0 + 0;while true do if (((0 -0)==v406) or ((4612 -(615 + 201))==(15214 -11649))) then v77=v95[3];v93[v218 + (115 -(89 + 23))]=v220;break;end end break;end end end break;end end break;end if ((4707>=(3225 -(2618 -(379 + 121)))) and (v216==(0 + 0))) then v217=0;v218=nil;v216=975 -(11 + 963);end if ((((2690 -1626) -276)<=(2275 + 2113)) and (v216==(204 -(187 + 16)))) then local v299=0 -0;while true do if ((v299==(0 + 0)) or ((10877 -8019)>=(353 + (11877 -7641)))) then v219=nil;v220=nil;v299=1;end if (((3072 -2212)<=(7863 -4676)) and (v299==(1 + 0))) then v216=1 + 0 + 1;break;end end end end else do return v93[v95[916 -(237 + 677)]];end end elseif (((736 + 27 + 319)==(1941 -859)) and (v96<=40)) then if ((v96>(379 -(316 + 24))) or (3238>((10399 -(418 + 1060)) -4772))) then local v221=0 -0;local v222;local v223;while true do if (((5966 -1223)>4349) and (v221==(0 -0))) then v222=0;v223=nil;v221=1 + 0;end if (((16050 -11133)>=(283 + 703 + 101)) and (v221==(1823 -(1034 + 788)))) then while true do if ((v222==(0 + 0)) or ((2842 + 481)<(639 -(205 + 61)))) then v223=v95[1044 -(137 + 905)];v93[v223]=v93[v223](v93[v223 + 1]);break;end end break;end end else local v224=0 + (1745 -(289 + 1456));local v225;local v226;while true do if ((v224==(1 + 0)) or ((2443 + 1865)<(5386 -3346))) then for v320=v225 + (2 -1),v95[368 -(280 + (1324 -(1019 + 220)))] do v8(v226,v93[v320]);end break;end if ((v224==(0 -0)) or ((1790 + (2288 -764))<(3261 -(725 + 275 + 512)))) then v225=v95[675 -(427 + 77 + 169)];v226=v93[v225];v224=860 -(232 + 627);end end end elseif (((7232 -4714)<=4782) and (v96>(204 -163))) then local v227=1462 -(434 + 1028);local v228;local v229;while true do if ((v227==1) or ((2135 -(142 + (19 -10)))>(9394 -4763))) then while true do if ((v228==(0 + 0)) or ((2518 -(428 + 277))<=(1305 + 112))) then v229=v93[v95[(429 + 567) -(351 + 641)]];if ( not v229 or (((3356 + 3730) -2422)<58)) then v77=v77 + (107 -(47 + 59));else local v386=0 -0;while true do if (((1154 -((4194 -3075) + 35))==v386) or ((404 + 1605)>=(16564 -11752))) then v93[v95[2]]=v229;v77=v95[2 + 1];break;end end end break;end end break;end if ((v227==((4131 -2196) -((1068 -(499 + 208)) + 1574))) or ((370 + 90)>=(13301 -9883))) then v228=0;v229=nil;v227=1 -0;end end else local v230=208 -(123 + 85);local v231;local v232;local v233;while true do if (((10461 -8343)>(2447 -((591 -(528 + 52)) + (856 -(23 + 123))))) and (v230==((1773 -(729 + 55)) -(97 + 891)))) then v233=nil;while true do if ((((2492 -801) + 409 + 1173)>=(171 + 798)) and ((0 -0)==v231)) then local v344=(1654 -(1645 + 9)) -0;while true do if (((1116 -606)<=(1305 + 3340)) and (v344==(1033 -(932 + 101)))) then local v392=1771 -(1617 + 154);while true do if ((v392==(1 + 0)) or ((7189 -4095)>=(9312 -5443))) then v344=1;break;end if (((10122 -(29173 -22109))>(3719 -1472)) and (v392==(0 + 0))) then v232=v95[7 -5];v233=v93[v95[1200 -(340 + 857)]];v392=3 -2;end end end if ((2965<=(2898 + 1485)) and (v344==(1209 -(1129 + 79)))) then v231=1 + (0 -0);break;end end end if ((2130>=(401 + 310)) and (v231==1)) then v93[v232 + 1 + 0]=v233;v93[v232]=v233[v95[1 + 3]];break;end end break;end if (((15761 -11275)>=(2270 + 1980)) and (v230==0)) then v231=0 -(1785 -(80 + 1705));v232=nil;v230=1086 -(766 + 319);end end end elseif ((v96<=49) or ((3442 + 1127)<=1043)) then if ((v96<=45) or (((264 -162) + (6827 -4562))<(6257 -(10818 -6325)))) then if ((v96<=43) or (606>=(3370 + 127))) then local v148=0 + 0;local v149;while true do if (((0 + (398 -(38 + 360)))==v148) or (4649<=(2250 + 1441))) then v149=v95[1 + 1];v93[v149](v93[v149 + (1964 -(1711 + 252))]);break;end end elseif (((11024 -7645)==3379) and (v96>(25 + 19))) then local v234=533 -(44 + 489);local v235;local v236;local v237;local v238;local v239;while true do if (((9412 -(508 + 3936))==(3332 + 1636)) and (v234==1)) then v237=nil;v238=nil;v234=2 -0;end if (((5770 -3853)<(861 + 1717)) and (v234==(2 + 0))) then v239=nil;while true do if ((v235==(1 + 0)) or ((9463 -7078)==(3084 -(907 + 152)))) then local v348=895 -((1727 -(790 + 360)) + 318);while true do if ((v348==(0 + 0)) or ((1460 -950)>(6025 -(1532 + 461)))) then v78=(v238 + v236) -(1439 -(156 + 1282));v239=824 -(453 + (582 -211));v348=3 -2;end if (((3499 -2172)<(3657 + 1281)) and (v348==(271 -((209 -94) + 155)))) then v235=2;break;end end end if (((13147 -9718)>=((74 -29) + 105)) and (v235==(449 -(11 + 438)))) then v236=v95[2 -0];v237,v238=v90(v93[v236](v93[v236 + (842 -(801 + 40))]));v235=1205 -(809 + 395);end if (((10792 -(7876 -(551 + 1441)))>1964) and (v235==2)) then for v370=v236,v78 do local v371=0 + (27 -(19 + 8));while true do if ((2788>313) and (v371==0)) then v239=v239 + ((2 + 2) -3);v93[v370]=v237[v239];break;end end end break;end end break;end if ((v234==(1792 -(1560 + 232))) or ((1309 + 77)>=3510)) then v235=0;v236=nil;v234=1 + 0;end end else v93[v95[1993 -(1457 + 534)]]=v43(v88[v95[2 + 1]],nil,v46);end elseif (((11858 -8574)>(8691 -6043)) and (v96<=47)) then if (((8400 -6193)<(2002 + 2166)) and (v96>(2011 -(1743 + 222)))) then v93[v95[1 + 1]]=v93[v95[3]] + v95[5 -1];else v93[v95[3 -1]]=v95[11 -(32 -24)];end elseif ((4039==(10932 -6893)) and (v96==(781 -(166 + 567)))) then local v244=1456 -(1252 + 204);local v245;local v246;local v247;local v248;local v249;local v250;while true do if ((142<(4502 -((580 -318) + (499 -330)))) and (v244==(3 -2))) then v247=nil;v248=nil;v244=935 -(422 + 511);end if (((979 + 1619)<=(9750 -6225)) and (v244==0)) then v245=0 + 0;v246=nil;v244=330 -(189 + 140);end if (((16071 -11833)>((22928 -13058) -6197)) and (v244==(7 -5))) then v249=nil;v250=nil;v244=671 -(28 + 640);end if (((4522 -2053)>1596) and (v244==(2 + 1))) then while true do if (((11214 -7211)>=(513 + 1029)) and (v245==((2296 -577) -(550 + 1167)))) then v250=nil;while true do if (((5061 -(752 + (1967 -(794 + 67))))==(5377 -2174)) and (v246==(183 -(109 + 73)))) then local v393=0;local v394;while true do if ((((8077 -5095) -(287 + 1146))<=(1119 + 2496)) and (0==v393)) then v394=0 -0;while true do if ((1695<(3178 -(607 + 190))) and (v394==(1 -0))) then v246=2;break;end if ((v394==(1741 -(1687 + 54))) or ((4296 -(147 + 646))<=(5148 -(513 + 1281)))) then v78=(v249 + v247) -(4 -3);v250=0 + 0;v394=1 + 0;end end break;end end end if (((482 + 4429)>(6015 -(678 + 724))) and (v246==(2 + 0))) then for v409=v247,v78 do local v410=0;local v411;while true do if (((1462 + 3026)>821) and (v410==(1029 -(86 + 943)))) then v411=0 + 0;while true do if ((v411==(0 + 0)) or ((4167 + (2601 -2052))<=3454)) then v250=v250 + (1 -0);v93[v409]=v248[v250];break;end end break;end end end break;end if (((239 + (465 -345))==(1110 -((506 -(22 + 28)) + 295))) and (v246==0)) then local v395=0 + 0;while true do if ((v395==0) or ((2507 + 622)==(1108 + 1367))) then v247=v95[7 -5];v248,v249=v90(v93[v247](v14(v93,v247 + (1 -0) + 0,v95[2 + 1])));v395=1;end if (((1 -0)==v395) or (3979<(3001 -((718 -557) + 1571)))) then v246=1 + 0 + 0;break;end end end end break;end if (((2960 -(727 + 410))<((12703 -6675) -(878 + 432))) and (v245==(1 -0))) then v248=nil;v249=nil;v245=173 -(102 + 69);end if (((2956 -(193 + 28))>(1780 -803)) and (v245==(104 -(20 + 84)))) then local v350=0 -0;while true do if (((445 + 2458)>(430 + 352)) and (v350==0)) then v246=0 + 0;v247=nil;v350=1 + 0;end if (((2991 -874)>(1118 + 410)) and (v350==1)) then v245=1 + 0;break;end end end end break;end end else local v251=0 + 0;local v252;local v253;while true do if ((v251==(0 -0)) or ((82 -53)>=(4885 -(98 + 52)))) then v252=0;v253=nil;v251=(3101 -1393) -(799 + 447 + 461);end if ((1717>(53 + 188)) and (v251==(1 -0))) then while true do if (((6484 -4129)<=3530) and (v252==(0 -0))) then v253=v95[873 -(57 + 53 + 761)];do return v14(v93,v253,v253 + v95[2 + 1 + 0]);end break;end end break;end end end elseif ((v96<=(222 -(363 -194))) or (1892==(1655 + 362))) then if ((v96<=(1469 -(876 + 542))) or ((5843 -(1243 + 519))<=(3437 -(1109 + 93)))) then if (((2623 -1279)>((1731 + 649) -(712 + 1026))) and (v96>(1229 -((1227 -(277 + 486)) + 715)))) then v93[v95[1 + 1]]=v93[v95[4 -1]] -v95[(15 -9) -2];else v93[v95[1420 -(538 + 880)]]=v46[v95[434 -((529 -218) + 120)]];end elseif (((673 + 3632)==(4562 -(5 + 180 + 72))) and (v96==(49 + 3))) then local v257=0 + 0;local v258;while true do if (((1693 + 2804)<4716) and (v257==(0 -0))) then v258=v95[6 -4];v93[v258](v14(v93,v258 + 1,v78));break;end end else local v259=(0 + 0) -(0 + 0);local v260;local v261;local v262;local v263;while true do if (((1721 -(363 + 1357))==v259) or ((5689 -(193 + (2751 -(428 + 638))))<(593 + 2892))) then local v303=0;while true do if ((3140==(9357 -6217)) and (v303==(2 -1))) then v259=5 -3;break;end if ((v303==(1403 -(1071 + (967 -635)))) or (((5423 -(999 + 724)) -(1430 + 34))<=(1934 -(539 + 950)))) then v78=(v262 + v260) -(3 -2);v263=0;v303=1 + 0;end end end if ((v259==(1628 -(723 + 903))) or ((5238 -2819)>=(939 + 1923))) then for v321=v260,v78 do local v322=0 + 0;while true do if (((3268 -(1395 + 140))==(3120 -1387)) and (v322==(0 + 0))) then v263=v263 + 1;v93[v321]=v261[v263];break;end end end break;end if ((v259==(0 -(0 + 0))) or (((623 + 3097) -(361 + 454))<(2606 -(149 + 140)))) then local v304=0;while true do if (((6796 -(695 + 1208))>(2786 -1254)) and (v304==(0 + 0))) then v260=v95[868 -((672 -437) + 631)];v261,v262=v90(v93[v260](v14(v93,v260 + 1 + 0,v78)));v304=1 -0;end if ((v304==(1 + 0)) or ((607 -308)>(4345 -(769 + 560)))) then v259=1 + 0;break;end end end end end elseif ((2137<(6115 -(269 + 1666))) and (v96<=(1254 -(641 + 558)))) then if ((v96>(1627 -(269 + 1304))) or (((1381 + 13485) -10508)<=2388)) then v93[v95[(3 -1) + 0]]=v95[(76 -(19 + 55)) + 1]~=((0 -0) -0);else local v265=0;local v266;local v267;local v268;local v269;while true do if (((3154 -1985)>=((2084 -(160 + 1352)) + 257)) and (v265==(2 -1))) then local v305=1316 -(798 + 518);while true do if (((9060 -5771)==(644 + (3171 -(259 + 267)))) and (v305==(1993 -(1618 + 374)))) then v265=2;break;end if ((405<(1017 + 1874)) and ((1436 -(374 + 1062))==v305)) then v268=nil;v269=nil;v305=1;end end end if (((113 + 324 + 2035)>(11263 -(2952 + 5892))) and (v265==(1 + 1))) then while true do if (((540 -(253 + 155))<=(5859 -(721 + 590))) and (v266==(5 -3))) then for v374=1,v95[(1047 -(729 + 315)) + 1] do local v375=0 + 0;local v376;local v377;local v378;while true do if ((4617>=(6243 -3837)) and (v375==(0 + 0))) then v376=0 -0;v377=nil;v375=1 -(0 + 0);end if ((v375==(1 + 0)) or (327>=(13780 -10302))) then v378=nil;while true do if ((v376==(2 -1)) or ((6548 -3591)<=(6619 -4301))) then while true do if (((2030 -(244 + 106))==(2008 -(59 + 269))) and (v377==(0 -0))) then local v453=0 -0;local v454;while true do if ((4356>(1586 -(1076 -650))) and (v453==0)) then v454=324 -(179 + 145);while true do if ((v454==(986 -(307 + 679))) or (((445 -234) + 98)==(4607 -(210 + 1424)))) then v77=v77 + (1642 -(946 + 695));v378=v87[v77];v454=1 + 0;end if ((2811>=(3371 -(1058 + 387))) and (v454==1)) then v377=3 -2;break;end end break;end end end if (((7502 -5062)<(944 + 2013)) and (v377==(2 -1))) then if ((3310>(1592 + 1325)) and (v378[1 + 0 + 0]==(1804 -(1660 + 124)))) then v269[v374-(428 -((641 -286) + 72))]={v93,v378[2 + (2 -1)]};else v269[v374-1]={v45,v378[6 -3]};end v92[ #v92 + 1]=v269;break;end end break;end if ((2432>=349) and ((1633 -(885 + 748))==v376)) then local v439=0;while true do if ((2073==(2468 -(322 + 73))) and (v439==(1 + 0))) then v376=1;break;end if (((263 + 200)<=((8497 -4321) -(216 + 338))) and (v439==0)) then v377=0;v378=nil;v439=581 -(385 + 195);end end end end break;end end end v93[v95[640 -(131 + 507)]]=v43(v267,v268,v46);break;end if ((149==(226 -77)) and (v266==0)) then local v354=(236 + 528) -(450 + 314);local v355;while true do if (((4112 -(371 + 172))<=(734 + (4409 -(98 + 267)))) and (v354==0)) then v355=0;while true do if (((3 -2)==v355) or ((3342 -(62 + 10 + 1206))<=(1483 -(14 + 21)))) then v266=1456 -(1168 + 287);break;end if ((v355==(0 -0)) or ((3753 -(339 + 153))<(214 + 39))) then local v434=(936 -(860 + 76)) -0;while true do if ((v434==(0 + 0)) or ((8293 -(13557 -7717))==(3544 + (2168 -(783 + 1118))))) then v267=v88[v95[3]];v268=nil;v434=2 -1;end if ((1==v434) or (2759<((16007 -11810) -2748))) then v355=1645 -(896 + 748);break;end end end end break;end end end if ((v266==(1319 -(304 + 1014))) or ((1846 + 1222)<(4150 -(926 + 486)))) then local v356=0 -0;while true do if ((2092==2092) and (v356==0)) then v269={};v268=v11({},{__index=function(v396,v397)local v412=1226 -(62 + 1164);local v413;while true do if ((v412==(0 + 0)) or ((2803 -1852)==(2944 -(2962 -1447)))) then v413=v269[v397];return v413[780 -((1073 -401) + 107)][v413[2]];end end end,__newindex=function(v396,v397,v398)local v414=0 + (0 -0);local v415;while true do if ((v414==(701 -(642 + 59))) or ((5444 -3780)>=3473)) then v415=v269[v397];v415[1521 -(1027 + 493)][v415[2 -0]]=v398;break;end end end});v356=1;end if ((v356==(1 -0)) or (((707 + 1574) -(13 + 3))>(1851 + 3088))) then v266=7 -5;break;end end end end break;end if ((v265==0) or ((1940 -848)>=(5161 -((1562 -549) + 775)))) then local v306=0 + 0 + 0;while true do if ((v306==(1 + 0)) or (((2731 -(249 + 66)) + 1991)>(1120 + 3383))) then v265=1272 -(415 + 856);break;end if (((7047 -3479)==3568) and (v306==(0 -0))) then v266=0 + 0;v267=nil;v306=2 -1;end end end end end elseif ((v96>(1102 -(86 + 960))) or (3474==((1 -0) + 4865))) then local v270=314 -(177 + 137);local v271;local v272;local v273;local v274;while true do if ((2382>(408 + 232)) and (v270==(2 -1))) then local v307=433 -(248 + (1979 -(176 + 1618)));while true do if (((8276 -4566)<(4688 -(395 + 288))) and (v307==(1 + 0 + 0))) then v270=5 -3;break;end if ((2797==2797) and (v307==(0 + 0))) then v273=nil;v274=nil;v307=1 + 0;end end end if ((4741>(1014 -615)) and (2==v270)) then while true do if (((3000 -1453)<(295 + 972 + 2265)) and (v271==(1 + 0))) then v274=225 -(169 + 56);for v379=v272,v95[2 + 2] do local v380=0;local v381;while true do if ((1085<(12444 -9212)) and (v380==(0 + 0))) then v381=0 + 0 + 0;while true do if ((251<=(29 + 1588)) and (v381==0)) then v274=v274 + 1 + 0;v93[v379]=v273[v274];break;end end break;end end end break;end if ((364<(3862 -(55 + 407))) and (v271==((0 -0) + (0 -0)))) then local v357=0 + 0;while true do if ((1392<=(6905 -4031)) and (v357==0)) then v272=v95[(2094 -1567) -(317 + 208)];v273={v93[v272](v93[v272 + (1649 -(10 + 1068 + (1629 -(673 + 386))))])};v357=2 -1;end if ((((14250 -10418) -2239)<2632) and (v357==(2 -1))) then v271=1436 -(643 + 792);break;end end end end break;end if (((264 + 3688)<4034) and (v270==(1884 -(313 + 1571)))) then local v308=0 + 0;while true do if (((2948 -1325)==(1430 + (492 -299))) and (1==v308)) then v270=1 -0;break;end if ((v308==(0 -0)) or ((1801 + 2230)>(6644 -(894 + 1089)))) then v271=0 + 0;v272=nil;v308=1 + 0 + 0;end end end end else v93[v95[2]]=v93[v95[3]]%v93[v95[1 + 3 + 0]];end v77=v77 + (105 -(64 + 40));break;end end break;end end end end;v76=3;end if (0==v76) then v77=1;v78= -1;v76=1;end if (v76==3) then A,B=v41(v12(v81));if  not A[1] then local v100=v44[4][v77] or "?";error("Script error at ["   .. v100   .. "]:"   .. A[2]);else return v14(A,2,B);end break;end end end;end return v43(v42(),{},v26)(...);end;v16("LOL!",v10(),...);break;end if (v0==4) then v13=select;v14=unpack or table.unpack;v15=tonumber;v0=5;end end end
